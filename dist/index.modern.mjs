import{casUpdateData as t,casFetchRows as a,casSetup as n}from"@sassoftware/restaflib";import{initStore as o}from"@sassoftware/restaf";function e(){return e=Object.assign?Object.assign.bind():function(t){for(var a=1;a<arguments.length;a++){var n=arguments[a];for(var o in n)Object.prototype.hasOwnProperty.call(n,o)&&(t[o]=n[o])}return t},e.apply(this,arguments)}async function s(t,a,n,o){const{handlers:e}=o.appControl.editControl;if(null==e[t])return[a,{statusCode:0,msg:null}];{const[s,l]=await e[t](a,n,o,t);return[s,l]}}async function l(a,n){const{store:o,session:e}=n,{table:s,byvars:l}=n.appControl.dataControl,r=n.state.columns;if(null===l||0===l.length)return;const i={};for(const t in a)"_index_"!==t&&!1===r[t].custom&&(i[t]=a[t]);const u={};l.forEach(t=>{u[t]=i[t]});const c={table:s,data:i,where:u};return await t(o,e,c)}async function r(t,a,n,o,r){let i=e({},null!==o?o:r.state.data[n]);const u=r.state.columns,{handlers:c,autoSave:f}=r.appControl.editControl;i[t]=function(t,a){let n=t;return"string"!=typeof n||"decimal"!==a.Type&&"number"!==a.Type&&"double"!==a.Type||(n=parseFloat(1*t),!0===isNaN(t)&&(t=0)),n}(a,u[t]);let p={statusCode:0,msg:""};if(null!=c[t]){const a=await c[t](i,t,n,r);if(i=a[0],p=a[1],2===p.statusCode)return{data:a[0],status:p}}let d=await s("main",i,n,r);if(!0===f){if(d=await s("term",d[0],n,r),p=d[1],2===p.statusCode)return{data:d[0],status:p};await l(i,r)}return i=d[0],p.msg=p.msg+" / "+d[1],!0===r.appControl.dataControl.cachePolicy&&(r.state.data[n]=i),{data:i,status:p}}async function i(t,n){const{store:o,session:l}=n,r=e({},t);if(null==r.table&&(r.table=n.appControl.dataControl.table),null==r.where&&(r.where={}),r.from<=0||-1===r.next)return null;const i=await a(o,l,r),u=await async function(t,a){const{schema:n,rows:o}=t,l=a.appControl.dataControl.customColumns,r=(t,a)=>{const n={};if(a.forEach((a,o)=>{const e=t[o],s=e.Column.toLowerCase();null==e.Label&&(e.Label=e.Column),n[s]=a}),null!=l)for(const t in l){const a=l[t],o=a.Column.toLowerCase();n[o]=a.value}return n},i=[];for(let t=0;t<o.length;t++){const e=r(n,o[t]),[l,u]=await s("init",e,t,a);0!==u.code&&console.log(JSON.stringify(u,null,4)),i.push(l)}const u={};if(n.forEach((t,a)=>{const n=t.Column.toLowerCase();t.name=n,t.Label=null==t.Label||0===t.Label.length?t.Column:t.Label,t.custom=!1,u[n]=t}),null!=l)for(const t in l){const a=e({},l[t]);a.name=t,a.custom=!0,u[t]=a}return{columns:u,data:i}}(i.data,n);return n.state={modified:[],pagination:e({},i.pagination),currentPage:r,data:[],columns:[]},!0===n.appControl.dataControl.cachePolicy&&(n.state.data=u.data,n.state.columns=u.columns),u.pagination=e({},i.pagination),u}async function u(t,a){const{initialFetch:n,table:o}=a.appControl.dataControl;let s;if("first"===t)s=e({},n),s.table=o;else if(s=a.state.pagination[t],-1===s.next)return null;return await i(s,a)}async function c(t,a){const e=o();null==t.authType&&(t.authType="code");const s=await n(e,t),l={store:e,session:s.session,servers:s.servers,restaflib:null,logonPayload:t,state:{modified:[],pagination:{},currentPage:{},data:{},columns:{}}};return l.appControl=a,l.id=Date(),l}export{r as cellEdit,s as commonHandler,i as fetchTableRows,u as scrollTable,c as setup,l as updateTableRows};
//# sourceMappingURL=index.modern.mjs.map
