import{casUpdateData as t,casFetchRows as n,computeFetchData as e,casSetup as a,caslRun as o,computeSetup as s,computeSetupTables as l,computeRun as i,casUpload as r,casAppendTable as c,casSaveTable as u}from"@sassoftware/restaflib";import{initStore as p}from"@sassoftware/restaf";function d(){return d=Object.assign?Object.assign.bind():function(t){for(var n=1;n<arguments.length;n++){var e=arguments[n];for(var a in e)Object.prototype.hasOwnProperty.call(e,a)&&(t[a]=e[a])}return t},d.apply(this,arguments)}async function f(t,n,e,a){const{handlers:o}=a.appControl.editControl;if(null==o[t])return[n,{statusCode:0,msg:null}];{const[s,l]=await o[t](n,e,a,t);return[s,l]}}async function m(t,n){let e;const a=n.appControl.byvars;if(null===a||0===a.length)return[null,{msg:"Error: Please specify a by variable",statusCode:1}];if(!0===Array.isArray(t))for(let a=0;a<t.length;a++)e=await w(t[a],n);else e=await w(t,n);return e}async function w(n,e){const{store:a,session:o}=e,s="cas"===e.source?t:C,l=function(t,n){const{table:e,byvars:a}=n.appControl,o=n.state.columns,s={};for(const n in t)"_index_"!==n&&"_rowIndex"!==n&&!1===o[n].custom&&(s[n]=t[n]);const l={};return a.forEach(t=>{l[t]=s[t]}),{table:e,data:s,where:l}}(n,e);return await s(a,o,l)}async function C(t,n,e){const{data:a,table:o,where:s}=e;let l=`proc sql; update ${o.libref}.${o.name}`,i="SET ",r=" ";for(const t in a)i=i+r+t+"="+y(a[t]),r=", ";l=l+" "+i;let c=" WHERE ",u=" ";for(const t in s)c=c+u+t+`= ${y(s[t])} `,u=" AND ";l=l+" "+c+";run;";const p={data:{code:l.split(/\r?\n/)}},d=await t.apiCall(n.links("execute"),p),f=await t.jobState(d,{qs:{newState:"Completed",timeout:1}});return{statusCode:"completed"===f.data?0:1,msg:f.data}}function y(t){let n;return n=null==t?".":"string"==typeof t?JSON.stringify(t):t.toString(),n}async function g(t,n,e,a,o){let s=d({},a);const l=o.state.columns,{handlers:i,autoSave:r}=o.appControl.editControl,c=null==r||r,u=null==o.appControl.cachePolicy||o.appControl.cachePolicy;s[t]=function(t,n){let e=t;const a=n.Type.toLowerCase();return"string"!=typeof e||"decimal"!==a&&"number"!==a&&"double"!==a&&"float"!==a||(e=parseFloat(1*t),!0===isNaN(t)&&(t=0)),e}(n,l[t]);let p={statusCode:0,msg:""};if(null!=i[t]){const n=await i[t](s,t,e,o);if(s=n[0],p=n[1],2===p.statusCode)return{data:n[0],status:p}}let w=await f("main",s,e,o);if(!0===c){if(w=await f("term",w[0],e,o),p=w[1],2===p.statusCode)return{data:w[0],status:p};p=await m(w[0],o)}return s=w[0],!0===u&&(o.state.data[a._rowIndex]=s),{data:s,status:p}}async function h(t,n){const{schema:e,rows:a}=t,o=n.appControl.customColumns;let s={statusCode:0,msg:"Initialization was successful"};const l=(t,n,e)=>{const a={_rowIndex:e};if(n.forEach((n,e)=>{const o=t[e].Column.toLowerCase();a[o]=n}),null!=o)for(const t in o){const n=o[t],e=n.Column.toLowerCase();a[e]=n.value}return a},i=[];for(let t=0;t<a.length;t++){const o=l(e,a[t],t),[r,c]=await f("init",o,t,n);s=c,i.push(r)}const r={};if(e.forEach((t,n)=>{const e=t.Column.toLowerCase();t.name=e,t.Label=null==t.Label||0===t.Label.length?t.Column:t.Label,null==t.Type&&(t.Type=null==t.type?"double":t.type),t.custom=!1,r[e]=t}),null!=o)for(const t in o){const n=d({},o[t]);n.name=t,n.custom=!0,r[t]=n}return{columns:r,data:i,status:s}}async function b(t,a,o){let s;return s="cas"===a.source?await async function(t,e,a){const{store:o,session:s}=e,{initialFetch:l,table:i}=e.appControl,r=null==e.appControl.cachePolicy||e.appControl.cachePolicy;let c;if(null!=a)c=d({},a);else if("first"===t)c=d({},l);else if(null!==t&&(c=d({},e.state.pagination[t]),-1===c.next||c.from<=0))return null;let u={};if(null!=c.qs?(u=d({},c.qs),u.from=u.start+1,u.count=u.limit):u=d({},c),u.from<=0||-1===u.next)return null;null==u.where&&(u.where=" "),u.table=i;const p=await n(o,s,u);let f=null;return null!==p?(f=await h(p.data,e),e.state={modified:[],pagination:d({},p.pagination),currentPage:c,data:[],columns:[]},!0===r&&(e.state.data=f.data,e.state.columns=f.columns),f.pagination=d({},p.pagination),f):void 0}(t,a,o):await async function(t,n,a){const{store:o,tableSummary:s}=n,{table:l,initialFetch:i}=n.appControl,r=null==n.appControl.cachePolicy||n.appControl.cachePolicy;let c=null;const u=`${l.libref}.${l.name}`.toLowerCase();null==a?"first"===t&&(c=d({},i)):c=d({},a);const p=await e(o,s,u,t,c);let f=null;return null!==p&&(f=await h(p,n),n.state={modified:[],pagination:{},currentPage:{},data:[],columns:[]},!0===r&&(n.state.data=f.data,n.state.columns=f.columns)),f}(t,a,o),s}async function P(t,n){let e=null!=t.storeOptions?t.storeOptions:{casProxy:!0};console.log(e);const i=p(e);let r;if(null==t.authType&&(t.authType="code"),r="cas"===n.source?await async function(t,n,e){const s=await a(t,n),l=null!=e.editControl.handlers.initApp?null:e.preamble;let i={source:e.source,store:t,session:s.session,servers:s.servers,restaflib:null,logonPayload:n,appControl:e,state:{modified:[],pagination:{},currentPage:{},data:{},columns:{}},id:Date()};if(null!==l){const n=await o(t,s.session,l);if(0!==n.disposition.statusCode)throw console.log(JSON.stringify(n,null,4)),"Preamble failed. Please see console"}return i}(i,t,n):await async function(t,n,e){const a=null!=e.editControl.handlers.initApp?null:e.preamble;let o=await s(t,e.computeContext,n),i={source:e.source,store:t,session:o,servers:null,restaflib:null,logonPayload:n,appControl:e,state:{modified:[],pagination:{},currentPage:{},data:{},columns:{}},id:Date()};if(null!=e.editControl.handlers.initApp){const t=await e.editControl.handlers.initApp(i,"initApp");if(2===t.statusCode)throw console.log(JSON.stringify(t,null,4)),"initApp failed. Please see console"}const r=await l(t,o,e.table,a);return i.tableSummary=r,i}(i,t,n),console.log(n.editControl.handlers.initApp),null!=n.editControl.handlers.initApp){const t=await n.editControl.handlers.initApp(r,"initApp");if(2===t.statusCode)throw console.log(JSON.stringify(t,null,4)),"initApp failed. Please see console"}return r}async function A(t,n,a){let s;const l=null!=a?a:n.appControl.table;return s="cas"===n.source?await async function(t,n,e){const{store:a,session:s}=e,l={table:t,column:n},i=await o(a,s,"\n  results = selectionLists(_args_.column,_args_.table.caslib, _args_.table.name);\n  send_response({casResults = {data=results}});\n  ",l,!0);if(0!==i.results.casResults.data.statusCode)throw"Failed to create unique list";return i.results.casResults.data.data}(l,t,n):await async function(t,n,a){const{store:o,session:s}=a,l=`\n    PROC SQL;\n    CREATE TABLE WORK.QUERY\n    AS\n    SELECT distinct(${n}) as utype FROM ${t.libref}.${t.name};\n   QUIT;`,r=await i(o,s,l),c={};let u="first";const p=[];let d;do{d=await e(o,r,"QUERY",u);const t=d.rows.map(t=>t[0]);p.push(...t),u="next"}while(d.scrollOptions.indexOf("next")>=0);return c[n]=p,c}(l,t,n),s}async function E(t,n,e,a,o,s,l){const{store:u,session:p}=o;null===n&&(n=o.state.data);const f=Object.keys(n[0]);let m=["_index_","_rowIndex"];null!==e&&(m=m.concat(e));const w=f.filter(t=>!(m.indexOf(t)>=0)),C={};w.forEach(t=>{C[t]=o.state.columns[t]});let y,g=null;"cas"===o.source&&(g=w.join(",")+"\n");for(let t=0;t<n.length;t++){let e=n[t];e=d({},e,a);const o=[];w.forEach((t,n)=>{let a=e[t];"string"==typeof a&&(a=a.trim()),o[n]=a}),g=null===g?o.join(",")+"\n":g+o.join(",")+"\n"}return y="cas"===o.source?await async function(t,n,e,a,o,s){const l=`${e.caslib}.${e.name}`;let i=await r(t,n,null,l,!0,a);return null!=o?(i=await c(t,n,e,o,s),i):i}(u,p,t,g,s,l):await async function(t,n,e,a,o){let s=`data ${a.libref}.${a.name}; INFILE datalines delimiter=',' ;\n`,l="",r="INPUT ";for(const t in e){const n=e[t];r=r+n.Column+" ","CHAR"===n.Type&&(l=l+" "+` ${n.Column} $ ${n.length} \n`)}return l.length>0&&(l="LENGTH "+l+";\n"),r+=";\n",s=s+";\n"+l+r+"datalines;\n"+o+"\n; run; proc print;run;\n",await i(t,n,s),{msg:"done",statusCode:0}}(u,p,C,t,g),y}async function O(t,n){const{store:e,session:a}=t;if("compute"===t.source)return{msg:"Action does not apply to SAS 9 tables",statusCode:0};const o=null!=n?n:t.appControl.table;return await u(e,a,o),{msg:"Table saved",statusCode:0}}async function S(t,n){const{store:e,session:a}=t,o=t.appControl.editControl.handlers;return null!=o.termapp&&await o.termapp(t),!1!==n&&await e.apiCall(a.links("delete")),{msg:"Session terminated",statusCode:0}}export{g as cellEdit,f as commonHandler,A as distinctValues,O as saveTable,b as scrollTable,P as setup,S as termApp,m as updateTableRows,E as uploadData};
//# sourceMappingURL=index.modern.mjs.map
