import{casUpdateData as t,casFetchRows as a,casSetup as n}from"@sassoftware/restaflib";import{initStore as e}from"@sassoftware/restaf";function o(){return o=Object.assign?Object.assign.bind():function(t){for(var a=1;a<arguments.length;a++){var n=arguments[a];for(var e in n)Object.prototype.hasOwnProperty.call(n,e)&&(t[e]=n[e])}return t},o.apply(this,arguments)}async function l(t,a,n,e){const{handlers:o}=e.appControl.editControl;if(null==o[t])return[a,{statusCode:0,msg:null}];{let[l,r]=await o[t](a,n,e,t);return[l,r]}}async function r(a,n){const{store:e,session:o}=n,{table:l,byvars:r}=n.appControl.dataControl,s=n.state.columns;if(null===r||0===r.length)return;const i={};for(const t in a)"_index_"!==t&&!1===s[t].custom&&(i[t]=a[t]);let u={};r.forEach(t=>{u[t]=i[t]});const c={table:l,data:i,where:u};return await t(e,o,c)}async function s(t,a,n,e,s){let i=o({},null!==e?e:s.state.data[n]),u=s.state.columns;const{handlers:c,autoSave:f}=s.appControl.editControl;i[t]=function(t,a){let n=t;return"string"!=typeof n||"decimal"!==a.Type&&"number"!==a.Type&&"double"!==a.Type||(n=parseFloat(1*t),!0===isNaN(t)&&(t=0)),n}(a,u[t]);let p={statusCode:0,msg:""};if(null!=c[t]){let a=await c[t](i,t,n,s);if(i=a[0],p=a[1],2===p.statusCode)return{data:a[0],status:p}}let d=await l("main",i,n,s);if(!0===f){if(d=await l("term",d[0],n,s),p=d[1],2===p.statusCode)return{data:d[0],status:p};await r(i,s)}return i=d[0],p.msg=p.msg+" / "+d[1],!0===s.appControl.dataControl.cachePolicy&&(s.state.data[n]=i),{data:i,status:p}}async function i(t,n){let{store:e,session:r}=n,s=o({},t);if(null==s.table&&(s.table=n.appControl.dataControl.table),null==s.where&&(s.where={}),s.from<=0||-1===s.next)return null;let i=await a(e,r,s),u=await async function(t,a){const{schema:n,rows:e}=t,r=a.appControl.dataControl.customColumns,s=(t,a)=>{let n={};if(a.forEach((a,e)=>{let o=t[e],l=o.Column.toLowerCase();null==o.Label&&(o.Label=o.Column),n[l]=a}),null!=r)for(let t in r){let a=r[t],e=a.Column.toLowerCase();n[e]=a.value}return n};let i=[];for(let t=0;t<e.length;t++){let o=s(n,e[t]),[r,u]=await l("init",o,t,a);0!==u.code&&console.log(JSON.stringify(u,null,4)),i.push(r)}let u={};if(n.forEach((t,a)=>{let n=t.Column.toLowerCase();t.name=n,t.Label=null==t.Label||0===t.Label.length?t.Column:t.Label,t.custom=!1,u[n]=t}),null!=r)for(let t in r){let a=o({},r[t]);a.name=t,a.custom=!0,u[t]=a}return{columns:u,data:i}}(i.data,n);return n.state={modified:[],pagination:o({},i.pagination),currentPage:s,data:[],columns:[]},!0===n.appControl.dataControl.cachePolicy&&(n.state.data=u.data,n.state.columns=u.columns),u.pagination=o({},i.pagination),u}async function u(t,a){const{initialFetch:n,table:e}=a.appControl.dataControl;let l;if("first"===t)l=o({},n),l.table=e;else if(l=a.state.pagination[t],-1===l.next)return null;return await i(l,a)}async function c(t,a){let o=e();null==t.authType&&(t.authType="code");let l=await n(o,t),r={store:o,session:l.session,servers:l.servers,restaflib:null,logonPayload:t,state:{modified:[],pagination:{},currentPage:{},data:{},columns:{}}};return r.appControl=a,r.id=Date(),r}export{s as cellEdit,l as commonHandler,i as fetchTableRows,u as scrollTable,c as setup,r as updateTableRows};
//# sourceMappingURL=index.modern.mjs.map
