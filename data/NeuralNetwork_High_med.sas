/*--------------------------------------------------
The options statement below should be placed
before the data step when submitting this code.
--------------------------------------------------*/
/* options VALIDMEMNAME=EXTEND VALIDVARNAME=ANY;*/
   /*------------------------------------------
   Generated SAS Scoring Code
     Date             : 30Jul2019:19:57:59
     Locale           : en_US
     Model Type       : Neural Network
     Interval variable: high_med
     Interval variable: doctorshop_med
     Interval variable: opioid_days
     Interval variable: PRESCRIBER_COUNT
     Interval variable: all_avg_med
     Interval variable: max_avg_med_90
     Response variable: high_med
     ------------------------------------------*/   /*---------------------------------------------------------

   SAS Code Generated by Cloud Analytic Services for Artificial Neural Network

     Date                  : 30Jul2019:23:57:59 UTC
     Response variable      : high_med
     Number of nodes        : 39
     Number of input nodes  : 5

     Number of output nodes : 1
     Number of hidden nodes : 33
     Number of hidden layers: 2
     Type of neural nets    : MLP

     ---------------------------------------------------------*/

   P_high_med = .;
   array _node_val_3142_{39} _temporary_; 

   _badval_ = 0;

   _dropinput_ =                    1;
   _drop_ =                    1;

   /* set input node values */

   _numval_ = doctorshop_med;

   if missing(_numval_) then do;
      _badval_ = 1; goto skip_3142; 
   end;
   _tval_ =                    1;
   _sumval_ =                    0;

   _numval_ = 2.0*(_numval_-_sumval_)/_tval_ - 1.0;
   _node_val_3142_{1} = _numval_*_dropinput_;
   _numval_ = opioid_days;
   if missing(_numval_) then do;

      _badval_ = 1; goto skip_3142; 
   end;
   _tval_ =                  270;
   _sumval_ =                    0;

   _numval_ = 2.0*(_numval_-_sumval_)/_tval_ - 1.0;
   _node_val_3142_{2} = _numval_*_dropinput_;
   _numval_ = PRESCRIBER_COUNT;

   if missing(_numval_) then do;
      _badval_ = 1; goto skip_3142; 
   end;
   _tval_ =                   13;
   _sumval_ =                    0;

   _numval_ = 2.0*(_numval_-_sumval_)/_tval_ - 1.0;
   _node_val_3142_{3} = _numval_*_dropinput_;
   _numval_ = all_avg_med;
   if missing(_numval_) then do;

      _badval_ = 1; goto skip_3142; 
   end;
   _tval_ =     731.095890410958;
   _sumval_ =                    0;

   _numval_ = 2.0*(_numval_-_sumval_)/_tval_ - 1.0;
   _node_val_3142_{4} = _numval_*_dropinput_;
   _numval_ = max_avg_med_90;

   if missing(_numval_) then do;
      _badval_ = 1; goto skip_3142; 
   end;
   _tval_ =     2883.33333333333;
   _sumval_ =                    0;

   _numval_ = 2.0*(_numval_-_sumval_)/_tval_ - 1.0;
   _node_val_3142_{5} = _numval_*_dropinput_;


   /* Forward Propagation of Net 0 */

   _sumval_ = 0.0;


   /* Combination for Node 5 */

   _numval_ = 0.0;
   _tval_   = 0.0;
   _bias_   =    -0.11197684134054;
   _nval_ = _node_val_3142_{1};

   _tval_ = _nval_ *     0.16728968413536;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{2};

   _tval_ = _nval_ *    -0.28342873697749;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{3};

   _tval_ = _nval_ *     0.26527528422164;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{4};

   _tval_ = _nval_ *    -0.14450318344194;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{5};

   _tval_ = _nval_ *     0.23883728271806;
   _numval_ + _tval_;
   _numval_ + _bias_;

   /* Activation for Node 5 */

   _tval_ = 2.0*_numval_;

   if (_tval_ gt     704.782712893384) then do;
      _numval_ = 1.0;
   end;

   else if (_tval_ lt         -708.3964185) then do;
      _tval_ = 0.0;
      _numval_ = 1.0-2.0/(1.0+_tval_);
   end;
   else do;
      _tval_ = exp(_tval_);

      _numval_ = 1.0-2.0/(1.0+_tval_);
   end;
   _node_val_3142_{6} = _numval_*_drop_;

   /* Combination for Node 6 */

   _numval_ = 0.0;
   _tval_   = 0.0;

   _bias_   =     -0.0109925407247;
   _nval_ = _node_val_3142_{1};
   _tval_ = _nval_ *     0.41387682427302;
   _numval_ + _tval_;

   _nval_ = _node_val_3142_{2};
   _tval_ = _nval_ *    -0.10565703696244;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{3};

   _tval_ = _nval_ *      0.8960068030075;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{4};

   _tval_ = _nval_ *     0.17045940765139;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{5};

   _tval_ = _nval_ *    -0.19975059621891;
   _numval_ + _tval_;
   _numval_ + _bias_;

   /* Activation for Node 6 */

   _tval_ = 2.0*_numval_;

   if (_tval_ gt     704.782712893384) then do;
      _numval_ = 1.0;
   end;

   else if (_tval_ lt         -708.3964185) then do;
      _tval_ = 0.0;
      _numval_ = 1.0-2.0/(1.0+_tval_);
   end;
   else do;
      _tval_ = exp(_tval_);

      _numval_ = 1.0-2.0/(1.0+_tval_);
   end;
   _node_val_3142_{7} = _numval_*_drop_;

   /* Combination for Node 7 */

   _numval_ = 0.0;
   _tval_   = 0.0;

   _bias_   =    -0.06093607090152;
   _nval_ = _node_val_3142_{1};
   _tval_ = _nval_ *    -0.34403823665803;
   _numval_ + _tval_;

   _nval_ = _node_val_3142_{2};
   _tval_ = _nval_ *     0.10183107990838;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{3};

   _tval_ = _nval_ *     0.07660590180147;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{4};

   _tval_ = _nval_ *     0.38884327282643;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{5};

   _tval_ = _nval_ *    -0.07812913094665;
   _numval_ + _tval_;
   _numval_ + _bias_;

   /* Activation for Node 7 */

   _tval_ = 2.0*_numval_;

   if (_tval_ gt     704.782712893384) then do;
      _numval_ = 1.0;
   end;

   else if (_tval_ lt         -708.3964185) then do;
      _tval_ = 0.0;
      _numval_ = 1.0-2.0/(1.0+_tval_);
   end;
   else do;
      _tval_ = exp(_tval_);

      _numval_ = 1.0-2.0/(1.0+_tval_);
   end;
   _node_val_3142_{8} = _numval_*_drop_;

   /* Combination for Node 8 */

   _numval_ = 0.0;
   _tval_   = 0.0;

   _bias_   =    -0.08895298156953;
   _nval_ = _node_val_3142_{1};
   _tval_ = _nval_ *    -0.35307080491385;
   _numval_ + _tval_;

   _nval_ = _node_val_3142_{2};
   _tval_ = _nval_ *     0.18175888034319;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{3};

   _tval_ = _nval_ *     0.16889365523264;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{4};

   _tval_ = _nval_ *     0.35362120190196;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{5};

   _tval_ = _nval_ *     0.51195013604111;
   _numval_ + _tval_;
   _numval_ + _bias_;

   /* Activation for Node 8 */

   _tval_ = 2.0*_numval_;

   if (_tval_ gt     704.782712893384) then do;
      _numval_ = 1.0;
   end;

   else if (_tval_ lt         -708.3964185) then do;
      _tval_ = 0.0;
      _numval_ = 1.0-2.0/(1.0+_tval_);
   end;
   else do;
      _tval_ = exp(_tval_);

      _numval_ = 1.0-2.0/(1.0+_tval_);
   end;
   _node_val_3142_{9} = _numval_*_drop_;

   /* Combination for Node 9 */

   _numval_ = 0.0;
   _tval_   = 0.0;

   _bias_   =    -0.03457173356914;
   _nval_ = _node_val_3142_{1};
   _tval_ = _nval_ *    -0.66133398964645;
   _numval_ + _tval_;

   _nval_ = _node_val_3142_{2};
   _tval_ = _nval_ *      0.2643841245647;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{3};

   _tval_ = _nval_ *    -0.04915911714317;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{4};

   _tval_ = _nval_ *     0.03145281440072;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{5};

   _tval_ = _nval_ *    -0.00179054451233;
   _numval_ + _tval_;
   _numval_ + _bias_;

   /* Activation for Node 9 */

   _tval_ = 2.0*_numval_;

   if (_tval_ gt     704.782712893384) then do;
      _numval_ = 1.0;
   end;

   else if (_tval_ lt         -708.3964185) then do;
      _tval_ = 0.0;
      _numval_ = 1.0-2.0/(1.0+_tval_);
   end;
   else do;
      _tval_ = exp(_tval_);

      _numval_ = 1.0-2.0/(1.0+_tval_);
   end;
   _node_val_3142_{10} = _numval_*_drop_;

   /* Combination for Node 10 */

   _numval_ = 0.0;
   _tval_   = 0.0;

   _bias_   =    -0.14534113843875;
   _nval_ = _node_val_3142_{1};
   _tval_ = _nval_ *    -0.00694926242713;
   _numval_ + _tval_;

   _nval_ = _node_val_3142_{2};
   _tval_ = _nval_ *     -0.3217514117312;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{3};

   _tval_ = _nval_ *     0.10108248204867;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{4};

   _tval_ = _nval_ *    -0.00994952763181;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{5};

   _tval_ = _nval_ *      0.0570465887922;
   _numval_ + _tval_;
   _numval_ + _bias_;

   /* Activation for Node 10 */

   _tval_ = 2.0*_numval_;

   if (_tval_ gt     704.782712893384) then do;
      _numval_ = 1.0;
   end;

   else if (_tval_ lt         -708.3964185) then do;
      _tval_ = 0.0;
      _numval_ = 1.0-2.0/(1.0+_tval_);
   end;
   else do;
      _tval_ = exp(_tval_);

      _numval_ = 1.0-2.0/(1.0+_tval_);
   end;
   _node_val_3142_{11} = _numval_*_drop_;

   /* Combination for Node 11 */

   _numval_ = 0.0;
   _tval_   = 0.0;

   _bias_   =    -0.04526894364204;
   _nval_ = _node_val_3142_{1};
   _tval_ = _nval_ *    -0.66120902882703;
   _numval_ + _tval_;

   _nval_ = _node_val_3142_{2};
   _tval_ = _nval_ *     -0.4901990389571;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{3};

   _tval_ = _nval_ *    -0.00950528215832;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{4};

   _tval_ = _nval_ *     0.80217443098169;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{5};

   _tval_ = _nval_ *    -0.53049877257867;
   _numval_ + _tval_;
   _numval_ + _bias_;

   /* Activation for Node 11 */

   _tval_ = 2.0*_numval_;

   if (_tval_ gt     704.782712893384) then do;
      _numval_ = 1.0;
   end;

   else if (_tval_ lt         -708.3964185) then do;
      _tval_ = 0.0;
      _numval_ = 1.0-2.0/(1.0+_tval_);
   end;
   else do;
      _tval_ = exp(_tval_);

      _numval_ = 1.0-2.0/(1.0+_tval_);
   end;
   _node_val_3142_{12} = _numval_*_drop_;

   /* Combination for Node 12 */

   _numval_ = 0.0;
   _tval_   = 0.0;

   _bias_   =    -0.05882404712572;
   _nval_ = _node_val_3142_{1};
   _tval_ = _nval_ *    -0.11408280779735;
   _numval_ + _tval_;

   _nval_ = _node_val_3142_{2};
   _tval_ = _nval_ *     0.18948748848468;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{3};

   _tval_ = _nval_ *    -0.43766344727609;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{4};

   _tval_ = _nval_ *    -0.01634140404677;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{5};

   _tval_ = _nval_ *    -0.21631834981261;
   _numval_ + _tval_;
   _numval_ + _bias_;

   /* Activation for Node 12 */

   _tval_ = 2.0*_numval_;

   if (_tval_ gt     704.782712893384) then do;
      _numval_ = 1.0;
   end;

   else if (_tval_ lt         -708.3964185) then do;
      _tval_ = 0.0;
      _numval_ = 1.0-2.0/(1.0+_tval_);
   end;
   else do;
      _tval_ = exp(_tval_);

      _numval_ = 1.0-2.0/(1.0+_tval_);
   end;
   _node_val_3142_{13} = _numval_*_drop_;

   /* Combination for Node 13 */

   _numval_ = 0.0;
   _tval_   = 0.0;

   _bias_   =     0.07835562981309;
   _nval_ = _node_val_3142_{1};
   _tval_ = _nval_ *    -0.16760915890041;
   _numval_ + _tval_;

   _nval_ = _node_val_3142_{2};
   _tval_ = _nval_ *    -0.18944236963922;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{3};

   _tval_ = _nval_ *    -0.22711495621103;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{4};

   _tval_ = _nval_ *     -0.1368718286325;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{5};

   _tval_ = _nval_ *     0.28584928772763;
   _numval_ + _tval_;
   _numval_ + _bias_;

   /* Activation for Node 13 */

   _tval_ = 2.0*_numval_;

   if (_tval_ gt     704.782712893384) then do;
      _numval_ = 1.0;
   end;

   else if (_tval_ lt         -708.3964185) then do;
      _tval_ = 0.0;
      _numval_ = 1.0-2.0/(1.0+_tval_);
   end;
   else do;
      _tval_ = exp(_tval_);

      _numval_ = 1.0-2.0/(1.0+_tval_);
   end;
   _node_val_3142_{14} = _numval_*_drop_;

   /* Combination for Node 14 */

   _numval_ = 0.0;
   _tval_   = 0.0;

   _bias_   =     0.02857088735505;
   _nval_ = _node_val_3142_{1};
   _tval_ = _nval_ *     0.14069901160811;
   _numval_ + _tval_;

   _nval_ = _node_val_3142_{2};
   _tval_ = _nval_ *     0.04067479638401;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{3};

   _tval_ = _nval_ *    -0.06973211704147;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{4};

   _tval_ = _nval_ *    -0.09506599500738;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{5};

   _tval_ = _nval_ *    -0.15405606628006;
   _numval_ + _tval_;
   _numval_ + _bias_;

   /* Activation for Node 14 */

   _tval_ = 2.0*_numval_;

   if (_tval_ gt     704.782712893384) then do;
      _numval_ = 1.0;
   end;

   else if (_tval_ lt         -708.3964185) then do;
      _tval_ = 0.0;
      _numval_ = 1.0-2.0/(1.0+_tval_);
   end;
   else do;
      _tval_ = exp(_tval_);

      _numval_ = 1.0-2.0/(1.0+_tval_);
   end;
   _node_val_3142_{15} = _numval_*_drop_;

   /* Combination for Node 15 */

   _numval_ = 0.0;
   _tval_   = 0.0;

   _bias_   =    -0.06267496526909;
   _nval_ = _node_val_3142_{1};
   _tval_ = _nval_ *    -0.18444917498029;
   _numval_ + _tval_;

   _nval_ = _node_val_3142_{2};
   _tval_ = _nval_ *    -0.02114472376136;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{3};

   _tval_ = _nval_ *     0.18735471296021;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{4};

   _tval_ = _nval_ *    -0.60348274261865;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{5};

   _tval_ = _nval_ *     0.48552004121023;
   _numval_ + _tval_;
   _numval_ + _bias_;

   /* Activation for Node 15 */

   _tval_ = 2.0*_numval_;

   if (_tval_ gt     704.782712893384) then do;
      _numval_ = 1.0;
   end;

   else if (_tval_ lt         -708.3964185) then do;
      _tval_ = 0.0;
      _numval_ = 1.0-2.0/(1.0+_tval_);
   end;
   else do;
      _tval_ = exp(_tval_);

      _numval_ = 1.0-2.0/(1.0+_tval_);
   end;
   _node_val_3142_{16} = _numval_*_drop_;

   /* Combination for Node 16 */

   _numval_ = 0.0;
   _tval_   = 0.0;

   _bias_   =    -0.04412134832823;
   _nval_ = _node_val_3142_{1};
   _tval_ = _nval_ *     -0.5818988898915;
   _numval_ + _tval_;

   _nval_ = _node_val_3142_{2};
   _tval_ = _nval_ *     0.07229749093884;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{3};

   _tval_ = _nval_ *     0.57729215640223;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{4};

   _tval_ = _nval_ *    -0.16341852586503;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{5};

   _tval_ = _nval_ *     0.78551085518689;
   _numval_ + _tval_;
   _numval_ + _bias_;

   /* Activation for Node 16 */

   _tval_ = 2.0*_numval_;

   if (_tval_ gt     704.782712893384) then do;
      _numval_ = 1.0;
   end;

   else if (_tval_ lt         -708.3964185) then do;
      _tval_ = 0.0;
      _numval_ = 1.0-2.0/(1.0+_tval_);
   end;
   else do;
      _tval_ = exp(_tval_);

      _numval_ = 1.0-2.0/(1.0+_tval_);
   end;
   _node_val_3142_{17} = _numval_*_drop_;

   /* Combination for Node 17 */

   _numval_ = 0.0;
   _tval_   = 0.0;

   _bias_   =     0.12589435062073;
   _nval_ = _node_val_3142_{1};
   _tval_ = _nval_ *     0.06106198536998;
   _numval_ + _tval_;

   _nval_ = _node_val_3142_{2};
   _tval_ = _nval_ *      0.1492773920678;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{3};

   _tval_ = _nval_ *    -0.11644244597505;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{4};

   _tval_ = _nval_ *     0.42407571070401;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{5};

   _tval_ = _nval_ *    -0.18221700751134;
   _numval_ + _tval_;
   _numval_ + _bias_;

   /* Activation for Node 17 */

   _tval_ = 2.0*_numval_;

   if (_tval_ gt     704.782712893384) then do;
      _numval_ = 1.0;
   end;

   else if (_tval_ lt         -708.3964185) then do;
      _tval_ = 0.0;
      _numval_ = 1.0-2.0/(1.0+_tval_);
   end;
   else do;
      _tval_ = exp(_tval_);

      _numval_ = 1.0-2.0/(1.0+_tval_);
   end;
   _node_val_3142_{18} = _numval_*_drop_;

   /* Combination for Node 18 */

   _numval_ = 0.0;
   _tval_   = 0.0;

   _bias_   =    -0.12750680768576;
   _nval_ = _node_val_3142_{1};
   _tval_ = _nval_ *     0.03219044064244;
   _numval_ + _tval_;

   _nval_ = _node_val_3142_{2};
   _tval_ = _nval_ *      0.1242063868184;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{3};

   _tval_ = _nval_ *     0.25886813507121;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{4};

   _tval_ = _nval_ *     0.12831887212381;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{5};

   _tval_ = _nval_ *    -0.25856651542575;
   _numval_ + _tval_;
   _numval_ + _bias_;

   /* Activation for Node 18 */

   _tval_ = 2.0*_numval_;

   if (_tval_ gt     704.782712893384) then do;
      _numval_ = 1.0;
   end;

   else if (_tval_ lt         -708.3964185) then do;
      _tval_ = 0.0;
      _numval_ = 1.0-2.0/(1.0+_tval_);
   end;
   else do;
      _tval_ = exp(_tval_);

      _numval_ = 1.0-2.0/(1.0+_tval_);
   end;
   _node_val_3142_{19} = _numval_*_drop_;

   /* Combination for Node 19 */

   _numval_ = 0.0;
   _tval_   = 0.0;

   _bias_   =    -0.04864566726407;
   _nval_ = _node_val_3142_{6};
   _tval_ = _nval_ *     0.88830675738083;
   _numval_ + _tval_;

   _nval_ = _node_val_3142_{7};
   _tval_ = _nval_ *    -0.74550330211181;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{8};

   _tval_ = _nval_ *    -0.05527399221319;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{9};

   _tval_ = _nval_ *    -0.28570249602127;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{10};

   _tval_ = _nval_ *      0.3833063228714;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{11};

   _tval_ = _nval_ *     0.43682559551397;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{12};

   _tval_ = _nval_ *     0.32709957851715;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{13};

   _tval_ = _nval_ *     0.03460556318934;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{14};

   _tval_ = _nval_ *    -0.15493026319859;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{15};

   _tval_ = _nval_ *     0.02078564996683;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{16};

   _tval_ = _nval_ *     0.16582111763298;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{17};

   _tval_ = _nval_ *    -0.26458523183362;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{18};

   _tval_ = _nval_ *    -0.23921859044732;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{19};

   _tval_ = _nval_ *     0.07552353257074;
   _numval_ + _tval_;
   _numval_ + _bias_;

   /* Activation for Node 19 */

   _tval_ = 2.0*_numval_;

   if (_tval_ gt     704.782712893384) then do;
      _numval_ = 1.0;
   end;

   else if (_tval_ lt         -708.3964185) then do;
      _tval_ = 0.0;
      _numval_ = 1.0-2.0/(1.0+_tval_);
   end;
   else do;
      _tval_ = exp(_tval_);

      _numval_ = 1.0-2.0/(1.0+_tval_);
   end;
   _node_val_3142_{20} = _numval_*_drop_;

   /* Combination for Node 20 */

   _numval_ = 0.0;
   _tval_   = 0.0;

   _bias_   =     0.00740976270876;
   _nval_ = _node_val_3142_{6};
   _tval_ = _nval_ *    -0.22738080170135;
   _numval_ + _tval_;

   _nval_ = _node_val_3142_{7};
   _tval_ = _nval_ *     -0.1932043920117;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{8};

   _tval_ = _nval_ *     0.38615744056961;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{9};

   _tval_ = _nval_ *     -0.1730489565354;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{10};

   _tval_ = _nval_ *    -0.25671224142969;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{11};

   _tval_ = _nval_ *    -0.40497127313442;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{12};

   _tval_ = _nval_ *     0.15678852187845;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{13};

   _tval_ = _nval_ *       0.150775296552;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{14};

   _tval_ = _nval_ *     0.23684554589397;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{15};

   _tval_ = _nval_ *    -0.25155768267168;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{16};

   _tval_ = _nval_ *     0.24941344667986;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{17};

   _tval_ = _nval_ *     0.86226026363639;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{18};

   _tval_ = _nval_ *     0.40142237481027;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{19};

   _tval_ = _nval_ *      0.4429863213654;
   _numval_ + _tval_;
   _numval_ + _bias_;

   /* Activation for Node 20 */

   _tval_ = 2.0*_numval_;

   if (_tval_ gt     704.782712893384) then do;
      _numval_ = 1.0;
   end;

   else if (_tval_ lt         -708.3964185) then do;
      _tval_ = 0.0;
      _numval_ = 1.0-2.0/(1.0+_tval_);
   end;
   else do;
      _tval_ = exp(_tval_);

      _numval_ = 1.0-2.0/(1.0+_tval_);
   end;
   _node_val_3142_{21} = _numval_*_drop_;

   /* Combination for Node 21 */

   _numval_ = 0.0;
   _tval_   = 0.0;

   _bias_   =    -0.03720293830409;
   _nval_ = _node_val_3142_{6};
   _tval_ = _nval_ *     0.32397615782142;
   _numval_ + _tval_;

   _nval_ = _node_val_3142_{7};
   _tval_ = _nval_ *    -0.07892989582298;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{8};

   _tval_ = _nval_ *    -0.26223078120436;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{9};

   _tval_ = _nval_ *     0.53721393813163;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{10};

   _tval_ = _nval_ *    -0.14131815062977;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{11};

   _tval_ = _nval_ *     0.72830206783324;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{12};

   _tval_ = _nval_ *     0.68902058599099;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{13};

   _tval_ = _nval_ *    -1.00943103858693;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{14};

   _tval_ = _nval_ *    -0.05615039173453;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{15};

   _tval_ = _nval_ *     0.27857560679404;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{16};

   _tval_ = _nval_ *     0.06855386686078;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{17};

   _tval_ = _nval_ *     0.37562540909845;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{18};

   _tval_ = _nval_ *     0.12130691265218;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{19};

   _tval_ = _nval_ *      0.3676008971051;
   _numval_ + _tval_;
   _numval_ + _bias_;

   /* Activation for Node 21 */

   _tval_ = 2.0*_numval_;

   if (_tval_ gt     704.782712893384) then do;
      _numval_ = 1.0;
   end;

   else if (_tval_ lt         -708.3964185) then do;
      _tval_ = 0.0;
      _numval_ = 1.0-2.0/(1.0+_tval_);
   end;
   else do;
      _tval_ = exp(_tval_);

      _numval_ = 1.0-2.0/(1.0+_tval_);
   end;
   _node_val_3142_{22} = _numval_*_drop_;

   /* Combination for Node 22 */

   _numval_ = 0.0;
   _tval_   = 0.0;

   _bias_   =     0.01772681977384;
   _nval_ = _node_val_3142_{6};
   _tval_ = _nval_ *    -0.10748893361571;
   _numval_ + _tval_;

   _nval_ = _node_val_3142_{7};
   _tval_ = _nval_ *    -0.39242923927867;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{8};

   _tval_ = _nval_ *    -0.57408472373559;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{9};

   _tval_ = _nval_ *    -0.42768115842424;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{10};

   _tval_ = _nval_ *    -0.79584066721482;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{11};

   _tval_ = _nval_ *    -0.12761066968015;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{12};

   _tval_ = _nval_ *    -0.09726219520059;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{13};

   _tval_ = _nval_ *     0.18451054680609;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{14};

   _tval_ = _nval_ *     0.00187768695231;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{15};

   _tval_ = _nval_ *     0.09343752488013;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{16};

   _tval_ = _nval_ *    -0.41408651828515;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{17};

   _tval_ = _nval_ *    -0.12605611109925;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{18};

   _tval_ = _nval_ *     0.99956375157128;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{19};

   _tval_ = _nval_ *    -0.07267490941894;
   _numval_ + _tval_;
   _numval_ + _bias_;

   /* Activation for Node 22 */

   _tval_ = 2.0*_numval_;

   if (_tval_ gt     704.782712893384) then do;
      _numval_ = 1.0;
   end;

   else if (_tval_ lt         -708.3964185) then do;
      _tval_ = 0.0;
      _numval_ = 1.0-2.0/(1.0+_tval_);
   end;
   else do;
      _tval_ = exp(_tval_);

      _numval_ = 1.0-2.0/(1.0+_tval_);
   end;
   _node_val_3142_{23} = _numval_*_drop_;

   /* Combination for Node 23 */

   _numval_ = 0.0;
   _tval_   = 0.0;

   _bias_   =     0.04124798748792;
   _nval_ = _node_val_3142_{6};
   _tval_ = _nval_ *     0.16780225249154;
   _numval_ + _tval_;

   _nval_ = _node_val_3142_{7};
   _tval_ = _nval_ *     0.43156394134243;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{8};

   _tval_ = _nval_ *     -0.5653375849383;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{9};

   _tval_ = _nval_ *     0.22543901434719;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{10};

   _tval_ = _nval_ *     0.62158108502233;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{11};

   _tval_ = _nval_ *     0.05858544021394;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{12};

   _tval_ = _nval_ *     0.29844438353583;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{13};

   _tval_ = _nval_ *    -0.10337890111261;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{14};

   _tval_ = _nval_ *    -0.24050390074257;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{15};

   _tval_ = _nval_ *     0.24287820518049;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{16};

   _tval_ = _nval_ *      -0.249805938552;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{17};

   _tval_ = _nval_ *    -0.10122274848209;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{18};

   _tval_ = _nval_ *     0.09040205768531;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{19};

   _tval_ = _nval_ *    -0.01648068369602;
   _numval_ + _tval_;
   _numval_ + _bias_;

   /* Activation for Node 23 */

   _tval_ = 2.0*_numval_;

   if (_tval_ gt     704.782712893384) then do;
      _numval_ = 1.0;
   end;

   else if (_tval_ lt         -708.3964185) then do;
      _tval_ = 0.0;
      _numval_ = 1.0-2.0/(1.0+_tval_);
   end;
   else do;
      _tval_ = exp(_tval_);

      _numval_ = 1.0-2.0/(1.0+_tval_);
   end;
   _node_val_3142_{24} = _numval_*_drop_;

   /* Combination for Node 24 */

   _numval_ = 0.0;
   _tval_   = 0.0;

   _bias_   =    -0.05742768274732;
   _nval_ = _node_val_3142_{6};
   _tval_ = _nval_ *     0.15516508302933;
   _numval_ + _tval_;

   _nval_ = _node_val_3142_{7};
   _tval_ = _nval_ *    -0.02075727725763;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{8};

   _tval_ = _nval_ *     0.53117336015653;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{9};

   _tval_ = _nval_ *    -0.72480428929805;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{10};

   _tval_ = _nval_ *    -0.63745968920435;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{11};

   _tval_ = _nval_ *     0.32991616557041;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{12};

   _tval_ = _nval_ *     0.35524665207831;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{13};

   _tval_ = _nval_ *     0.86695574583579;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{14};

   _tval_ = _nval_ *    -0.34786445897555;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{15};

   _tval_ = _nval_ *    -0.11132892246417;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{16};

   _tval_ = _nval_ *     0.25845764565491;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{17};

   _tval_ = _nval_ *    -0.10404048220305;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{18};

   _tval_ = _nval_ *     -0.4776053959377;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{19};

   _tval_ = _nval_ *    -0.17966839971382;
   _numval_ + _tval_;
   _numval_ + _bias_;

   /* Activation for Node 24 */

   _tval_ = 2.0*_numval_;

   if (_tval_ gt     704.782712893384) then do;
      _numval_ = 1.0;
   end;

   else if (_tval_ lt         -708.3964185) then do;
      _tval_ = 0.0;
      _numval_ = 1.0-2.0/(1.0+_tval_);
   end;
   else do;
      _tval_ = exp(_tval_);

      _numval_ = 1.0-2.0/(1.0+_tval_);
   end;
   _node_val_3142_{25} = _numval_*_drop_;

   /* Combination for Node 25 */

   _numval_ = 0.0;
   _tval_   = 0.0;

   _bias_   =    -0.01509338999769;
   _nval_ = _node_val_3142_{6};
   _tval_ = _nval_ *     -0.0683830301441;
   _numval_ + _tval_;

   _nval_ = _node_val_3142_{7};
   _tval_ = _nval_ *    -0.83154238545178;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{8};

   _tval_ = _nval_ *     0.35862167909584;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{9};

   _tval_ = _nval_ *     0.08978527526036;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{10};

   _tval_ = _nval_ *    -0.18020184978285;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{11};

   _tval_ = _nval_ *     0.68429444545634;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{12};

   _tval_ = _nval_ *    -0.11361171012969;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{13};

   _tval_ = _nval_ *     0.20340282773626;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{14};

   _tval_ = _nval_ *     0.39744760750082;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{15};

   _tval_ = _nval_ *    -0.27086621578234;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{16};

   _tval_ = _nval_ *    -0.02540753375039;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{17};

   _tval_ = _nval_ *    -0.39560757149303;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{18};

   _tval_ = _nval_ *    -0.37408902014848;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{19};

   _tval_ = _nval_ *    -0.19776743480141;
   _numval_ + _tval_;
   _numval_ + _bias_;

   /* Activation for Node 25 */

   _tval_ = 2.0*_numval_;

   if (_tval_ gt     704.782712893384) then do;
      _numval_ = 1.0;
   end;

   else if (_tval_ lt         -708.3964185) then do;
      _tval_ = 0.0;
      _numval_ = 1.0-2.0/(1.0+_tval_);
   end;
   else do;
      _tval_ = exp(_tval_);

      _numval_ = 1.0-2.0/(1.0+_tval_);
   end;
   _node_val_3142_{26} = _numval_*_drop_;

   /* Combination for Node 26 */

   _numval_ = 0.0;
   _tval_   = 0.0;

   _bias_   =    -0.00754590627821;
   _nval_ = _node_val_3142_{6};
   _tval_ = _nval_ *     0.14226844567427;
   _numval_ + _tval_;

   _nval_ = _node_val_3142_{7};
   _tval_ = _nval_ *     0.02704892361104;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{8};

   _tval_ = _nval_ *     0.62294690469774;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{9};

   _tval_ = _nval_ *    -0.63031506557521;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{10};

   _tval_ = _nval_ *    -0.08573780572814;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{11};

   _tval_ = _nval_ *    -0.44624020090973;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{12};

   _tval_ = _nval_ *     0.18482344242638;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{13};

   _tval_ = _nval_ *    -0.00804883416497;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{14};

   _tval_ = _nval_ *    -0.12188023039411;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{15};

   _tval_ = _nval_ *     0.04348664834288;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{16};

   _tval_ = _nval_ *     0.26671664984527;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{17};

   _tval_ = _nval_ *     0.02987622342159;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{18};

   _tval_ = _nval_ *     0.08938978083438;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{19};

   _tval_ = _nval_ *     0.21615496394317;
   _numval_ + _tval_;
   _numval_ + _bias_;

   /* Activation for Node 26 */

   _tval_ = 2.0*_numval_;

   if (_tval_ gt     704.782712893384) then do;
      _numval_ = 1.0;
   end;

   else if (_tval_ lt         -708.3964185) then do;
      _tval_ = 0.0;
      _numval_ = 1.0-2.0/(1.0+_tval_);
   end;
   else do;
      _tval_ = exp(_tval_);

      _numval_ = 1.0-2.0/(1.0+_tval_);
   end;
   _node_val_3142_{27} = _numval_*_drop_;

   /* Combination for Node 27 */

   _numval_ = 0.0;
   _tval_   = 0.0;

   _bias_   =     -0.0278324227015;
   _nval_ = _node_val_3142_{6};
   _tval_ = _nval_ *    -0.35327133547237;
   _numval_ + _tval_;

   _nval_ = _node_val_3142_{7};
   _tval_ = _nval_ *    -0.62921469776065;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{8};

   _tval_ = _nval_ *    -0.33640403688077;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{9};

   _tval_ = _nval_ *     0.03429748285827;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{10};

   _tval_ = _nval_ *    -0.06534707169376;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{11};

   _tval_ = _nval_ *     -0.3666934276257;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{12};

   _tval_ = _nval_ *     0.34411242971057;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{13};

   _tval_ = _nval_ *     0.07112470249335;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{14};

   _tval_ = _nval_ *     0.30853047371436;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{15};

   _tval_ = _nval_ *     0.40195224366833;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{16};

   _tval_ = _nval_ *    -0.38224380606671;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{17};

   _tval_ = _nval_ *     0.03795420361491;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{18};

   _tval_ = _nval_ *     0.45252148224408;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{19};

   _tval_ = _nval_ *    -0.17127018711686;
   _numval_ + _tval_;
   _numval_ + _bias_;

   /* Activation for Node 27 */

   _tval_ = 2.0*_numval_;

   if (_tval_ gt     704.782712893384) then do;
      _numval_ = 1.0;
   end;

   else if (_tval_ lt         -708.3964185) then do;
      _tval_ = 0.0;
      _numval_ = 1.0-2.0/(1.0+_tval_);
   end;
   else do;
      _tval_ = exp(_tval_);

      _numval_ = 1.0-2.0/(1.0+_tval_);
   end;
   _node_val_3142_{28} = _numval_*_drop_;

   /* Combination for Node 28 */

   _numval_ = 0.0;
   _tval_   = 0.0;

   _bias_   =     0.00497354963792;
   _nval_ = _node_val_3142_{6};
   _tval_ = _nval_ *     0.06863279921757;
   _numval_ + _tval_;

   _nval_ = _node_val_3142_{7};
   _tval_ = _nval_ *     0.06621260177586;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{8};

   _tval_ = _nval_ *    -0.14736334245073;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{9};

   _tval_ = _nval_ *     0.60484298449148;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{10};

   _tval_ = _nval_ *    -0.21170856476512;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{11};

   _tval_ = _nval_ *    -0.38592527295695;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{12};

   _tval_ = _nval_ *     -0.4522818596596;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{13};

   _tval_ = _nval_ *    -0.60254369258592;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{14};

   _tval_ = _nval_ *     -0.1349823700977;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{15};

   _tval_ = _nval_ *     0.27483931059351;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{16};

   _tval_ = _nval_ *    -0.00803710971583;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{17};

   _tval_ = _nval_ *    -0.50011675770513;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{18};

   _tval_ = _nval_ *     0.24247098808115;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{19};

   _tval_ = _nval_ *    -0.08842445268055;
   _numval_ + _tval_;
   _numval_ + _bias_;

   /* Activation for Node 28 */

   _tval_ = 2.0*_numval_;

   if (_tval_ gt     704.782712893384) then do;
      _numval_ = 1.0;
   end;

   else if (_tval_ lt         -708.3964185) then do;
      _tval_ = 0.0;
      _numval_ = 1.0-2.0/(1.0+_tval_);
   end;
   else do;
      _tval_ = exp(_tval_);

      _numval_ = 1.0-2.0/(1.0+_tval_);
   end;
   _node_val_3142_{29} = _numval_*_drop_;

   /* Combination for Node 29 */

   _numval_ = 0.0;
   _tval_   = 0.0;

   _bias_   =    -0.03360052605373;
   _nval_ = _node_val_3142_{6};
   _tval_ = _nval_ *      0.2490841093147;
   _numval_ + _tval_;

   _nval_ = _node_val_3142_{7};
   _tval_ = _nval_ *     0.30743462765087;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{8};

   _tval_ = _nval_ *    -0.55590870870879;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{9};

   _tval_ = _nval_ *      0.4115315045451;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{10};

   _tval_ = _nval_ *    -0.11813624507817;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{11};

   _tval_ = _nval_ *     0.02410617864454;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{12};

   _tval_ = _nval_ *     0.12732173314085;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{13};

   _tval_ = _nval_ *    -0.51718024525407;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{14};

   _tval_ = _nval_ *    -0.06779741439528;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{15};

   _tval_ = _nval_ *    -0.44901369440156;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{16};

   _tval_ = _nval_ *     0.09068911026753;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{17};

   _tval_ = _nval_ *     0.11901143444787;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{18};

   _tval_ = _nval_ *     -0.4352612483959;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{19};

   _tval_ = _nval_ *     0.07863092590271;
   _numval_ + _tval_;
   _numval_ + _bias_;

   /* Activation for Node 29 */

   _tval_ = 2.0*_numval_;

   if (_tval_ gt     704.782712893384) then do;
      _numval_ = 1.0;
   end;

   else if (_tval_ lt         -708.3964185) then do;
      _tval_ = 0.0;
      _numval_ = 1.0-2.0/(1.0+_tval_);
   end;
   else do;
      _tval_ = exp(_tval_);

      _numval_ = 1.0-2.0/(1.0+_tval_);
   end;
   _node_val_3142_{30} = _numval_*_drop_;

   /* Combination for Node 30 */

   _numval_ = 0.0;
   _tval_   = 0.0;

   _bias_   =     0.03302216838008;
   _nval_ = _node_val_3142_{6};
   _tval_ = _nval_ *    -0.10288574941955;
   _numval_ + _tval_;

   _nval_ = _node_val_3142_{7};
   _tval_ = _nval_ *    -0.03581084334114;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{8};

   _tval_ = _nval_ *     0.11174242175233;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{9};

   _tval_ = _nval_ *     -0.1796649092384;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{10};

   _tval_ = _nval_ *     0.09919690125442;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{11};

   _tval_ = _nval_ *    -0.15638640247783;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{12};

   _tval_ = _nval_ *    -0.75953609021666;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{13};

   _tval_ = _nval_ *     0.40726081643989;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{14};

   _tval_ = _nval_ *     0.03801097721197;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{15};

   _tval_ = _nval_ *    -0.05887023417352;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{16};

   _tval_ = _nval_ *    -0.40328479430049;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{17};

   _tval_ = _nval_ *    -0.01055452397185;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{18};

   _tval_ = _nval_ *      0.2918288289072;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{19};

   _tval_ = _nval_ *    -0.36493345348154;
   _numval_ + _tval_;
   _numval_ + _bias_;

   /* Activation for Node 30 */

   _tval_ = 2.0*_numval_;

   if (_tval_ gt     704.782712893384) then do;
      _numval_ = 1.0;
   end;

   else if (_tval_ lt         -708.3964185) then do;
      _tval_ = 0.0;
      _numval_ = 1.0-2.0/(1.0+_tval_);
   end;
   else do;
      _tval_ = exp(_tval_);

      _numval_ = 1.0-2.0/(1.0+_tval_);
   end;
   _node_val_3142_{31} = _numval_*_drop_;

   /* Combination for Node 31 */

   _numval_ = 0.0;
   _tval_   = 0.0;

   _bias_   =     0.01676826781654;
   _nval_ = _node_val_3142_{6};
   _tval_ = _nval_ *     0.24956004732857;
   _numval_ + _tval_;

   _nval_ = _node_val_3142_{7};
   _tval_ = _nval_ *     0.11442330864306;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{8};

   _tval_ = _nval_ *    -0.35548163619699;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{9};

   _tval_ = _nval_ *      0.0118100379971;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{10};

   _tval_ = _nval_ *    -0.42392920516263;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{11};

   _tval_ = _nval_ *     0.00486523842213;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{12};

   _tval_ = _nval_ *    -0.23595069682205;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{13};

   _tval_ = _nval_ *    -0.25340737687285;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{14};

   _tval_ = _nval_ *    -0.22360443511394;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{15};

   _tval_ = _nval_ *    -0.14559216030474;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{16};

   _tval_ = _nval_ *    -0.33737596943742;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{17};

   _tval_ = _nval_ *    -0.41167027173162;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{18};

   _tval_ = _nval_ *    -0.31480230576309;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{19};

   _tval_ = _nval_ *    -0.40497642867783;
   _numval_ + _tval_;
   _numval_ + _bias_;

   /* Activation for Node 31 */

   _tval_ = 2.0*_numval_;

   if (_tval_ gt     704.782712893384) then do;
      _numval_ = 1.0;
   end;

   else if (_tval_ lt         -708.3964185) then do;
      _tval_ = 0.0;
      _numval_ = 1.0-2.0/(1.0+_tval_);
   end;
   else do;
      _tval_ = exp(_tval_);

      _numval_ = 1.0-2.0/(1.0+_tval_);
   end;
   _node_val_3142_{32} = _numval_*_drop_;

   /* Combination for Node 32 */

   _numval_ = 0.0;
   _tval_   = 0.0;

   _bias_   =     0.01641265806828;
   _nval_ = _node_val_3142_{6};
   _tval_ = _nval_ *     0.53517387344364;
   _numval_ + _tval_;

   _nval_ = _node_val_3142_{7};
   _tval_ = _nval_ *     0.00544639099309;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{8};

   _tval_ = _nval_ *    -0.14829470684866;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{9};

   _tval_ = _nval_ *     -0.1762003992223;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{10};

   _tval_ = _nval_ *    -0.66899870371248;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{11};

   _tval_ = _nval_ *    -0.14206937295704;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{12};

   _tval_ = _nval_ *     0.17155736728351;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{13};

   _tval_ = _nval_ *    -0.26137519741101;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{14};

   _tval_ = _nval_ *    -0.09217327308898;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{15};

   _tval_ = _nval_ *    -0.60271690169012;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{16};

   _tval_ = _nval_ *    -0.26647989600639;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{17};

   _tval_ = _nval_ *    -0.07637208913797;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{18};

   _tval_ = _nval_ *    -0.27428115453317;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{19};

   _tval_ = _nval_ *    -0.13613122211911;
   _numval_ + _tval_;
   _numval_ + _bias_;

   /* Activation for Node 32 */

   _tval_ = 2.0*_numval_;

   if (_tval_ gt     704.782712893384) then do;
      _numval_ = 1.0;
   end;

   else if (_tval_ lt         -708.3964185) then do;
      _tval_ = 0.0;
      _numval_ = 1.0-2.0/(1.0+_tval_);
   end;
   else do;
      _tval_ = exp(_tval_);

      _numval_ = 1.0-2.0/(1.0+_tval_);
   end;
   _node_val_3142_{33} = _numval_*_drop_;

   /* Combination for Node 33 */

   _numval_ = 0.0;
   _tval_   = 0.0;

   _bias_   =     0.21223050432619;
   _nval_ = _node_val_3142_{6};
   _tval_ = _nval_ *    -0.38044241564151;
   _numval_ + _tval_;

   _nval_ = _node_val_3142_{7};
   _tval_ = _nval_ *    -0.46349607088767;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{8};

   _tval_ = _nval_ *    -0.17489710911794;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{9};

   _tval_ = _nval_ *    -0.33011744289443;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{10};

   _tval_ = _nval_ *    -0.48270511026949;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{11};

   _tval_ = _nval_ *    -0.27696828214045;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{12};

   _tval_ = _nval_ *    -0.20049652704697;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{13};

   _tval_ = _nval_ *    -0.32378544827721;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{14};

   _tval_ = _nval_ *     0.26394955917099;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{15};

   _tval_ = _nval_ *     0.16873922919948;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{16};

   _tval_ = _nval_ *     0.13363085768428;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{17};

   _tval_ = _nval_ *     0.11989071944989;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{18};

   _tval_ = _nval_ *     0.35399645846191;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{19};

   _tval_ = _nval_ *    -0.37489490217065;
   _numval_ + _tval_;
   _numval_ + _bias_;

   /* Activation for Node 33 */

   _tval_ = 2.0*_numval_;

   if (_tval_ gt     704.782712893384) then do;
      _numval_ = 1.0;
   end;

   else if (_tval_ lt         -708.3964185) then do;
      _tval_ = 0.0;
      _numval_ = 1.0-2.0/(1.0+_tval_);
   end;
   else do;
      _tval_ = exp(_tval_);

      _numval_ = 1.0-2.0/(1.0+_tval_);
   end;
   _node_val_3142_{34} = _numval_*_drop_;

   /* Combination for Node 34 */

   _numval_ = 0.0;
   _tval_   = 0.0;

   _bias_   =     0.01832034461957;
   _nval_ = _node_val_3142_{6};
   _tval_ = _nval_ *     -0.0623378873932;
   _numval_ + _tval_;

   _nval_ = _node_val_3142_{7};
   _tval_ = _nval_ *      0.5798872279078;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{8};

   _tval_ = _nval_ *     0.25450495490076;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{9};

   _tval_ = _nval_ *     0.25878540641524;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{10};

   _tval_ = _nval_ *    -0.23051676939746;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{11};

   _tval_ = _nval_ *     0.26789868606103;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{12};

   _tval_ = _nval_ *    -0.29352778746171;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{13};

   _tval_ = _nval_ *    -0.29309107262896;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{14};

   _tval_ = _nval_ *     0.32049853581222;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{15};

   _tval_ = _nval_ *      0.8136160699068;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{16};

   _tval_ = _nval_ *    -0.37896567032074;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{17};

   _tval_ = _nval_ *    -0.31093775914874;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{18};

   _tval_ = _nval_ *    -0.23297728141504;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{19};

   _tval_ = _nval_ *    -0.66811249829004;
   _numval_ + _tval_;
   _numval_ + _bias_;

   /* Activation for Node 34 */

   _tval_ = 2.0*_numval_;

   if (_tval_ gt     704.782712893384) then do;
      _numval_ = 1.0;
   end;

   else if (_tval_ lt         -708.3964185) then do;
      _tval_ = 0.0;
      _numval_ = 1.0-2.0/(1.0+_tval_);
   end;
   else do;
      _tval_ = exp(_tval_);

      _numval_ = 1.0-2.0/(1.0+_tval_);
   end;
   _node_val_3142_{35} = _numval_*_drop_;

   /* Combination for Node 35 */

   _numval_ = 0.0;
   _tval_   = 0.0;

   _bias_   =     0.04646118384325;
   _nval_ = _node_val_3142_{6};
   _tval_ = _nval_ *      0.6910487814512;
   _numval_ + _tval_;

   _nval_ = _node_val_3142_{7};
   _tval_ = _nval_ *    -0.10169709639521;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{8};

   _tval_ = _nval_ *     0.09298959041506;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{9};

   _tval_ = _nval_ *    -0.02979805223307;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{10};

   _tval_ = _nval_ *      0.1949299603314;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{11};

   _tval_ = _nval_ *    -0.48489197585565;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{12};

   _tval_ = _nval_ *    -0.23209036491573;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{13};

   _tval_ = _nval_ *     0.25501171464996;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{14};

   _tval_ = _nval_ *     0.04126765439287;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{15};

   _tval_ = _nval_ *    -0.52333318990553;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{16};

   _tval_ = _nval_ *    -0.37656802220972;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{17};

   _tval_ = _nval_ *     0.28737716044592;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{18};

   _tval_ = _nval_ *    -0.08639208228016;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{19};

   _tval_ = _nval_ *    -0.21098295602152;
   _numval_ + _tval_;
   _numval_ + _bias_;

   /* Activation for Node 35 */

   _tval_ = 2.0*_numval_;

   if (_tval_ gt     704.782712893384) then do;
      _numval_ = 1.0;
   end;

   else if (_tval_ lt         -708.3964185) then do;
      _tval_ = 0.0;
      _numval_ = 1.0-2.0/(1.0+_tval_);
   end;
   else do;
      _tval_ = exp(_tval_);

      _numval_ = 1.0-2.0/(1.0+_tval_);
   end;
   _node_val_3142_{36} = _numval_*_drop_;

   /* Combination for Node 36 */

   _numval_ = 0.0;
   _tval_   = 0.0;

   _bias_   =      0.0228720396811;
   _nval_ = _node_val_3142_{6};
   _tval_ = _nval_ *    -0.83679306759568;
   _numval_ + _tval_;

   _nval_ = _node_val_3142_{7};
   _tval_ = _nval_ *    -0.78683656570886;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{8};

   _tval_ = _nval_ *     0.21391469105255;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{9};

   _tval_ = _nval_ *    -0.15684694202076;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{10};

   _tval_ = _nval_ *     0.12114847935821;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{11};

   _tval_ = _nval_ *     0.33942861910206;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{12};

   _tval_ = _nval_ *    -0.06660299662734;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{13};

   _tval_ = _nval_ *    -0.79684857741728;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{14};

   _tval_ = _nval_ *    -0.20759364292553;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{15};

   _tval_ = _nval_ *    -0.11402124256521;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{16};

   _tval_ = _nval_ *    -0.31089226010159;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{17};

   _tval_ = _nval_ *    -0.20974492617388;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{18};

   _tval_ = _nval_ *     -0.5387817927129;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{19};

   _tval_ = _nval_ *     0.35295139279776;
   _numval_ + _tval_;
   _numval_ + _bias_;

   /* Activation for Node 36 */

   _tval_ = 2.0*_numval_;

   if (_tval_ gt     704.782712893384) then do;
      _numval_ = 1.0;
   end;

   else if (_tval_ lt         -708.3964185) then do;
      _tval_ = 0.0;
      _numval_ = 1.0-2.0/(1.0+_tval_);
   end;
   else do;
      _tval_ = exp(_tval_);

      _numval_ = 1.0-2.0/(1.0+_tval_);
   end;
   _node_val_3142_{37} = _numval_*_drop_;

   /* Combination for Node 37 */

   _numval_ = 0.0;
   _tval_   = 0.0;

   _bias_   =     0.00997070225736;
   _nval_ = _node_val_3142_{6};
   _tval_ = _nval_ *     0.21432603417896;
   _numval_ + _tval_;

   _nval_ = _node_val_3142_{7};
   _tval_ = _nval_ *     0.45295971490922;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{8};

   _tval_ = _nval_ *     0.63124452509727;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{9};

   _tval_ = _nval_ *    -0.22402708429141;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{10};

   _tval_ = _nval_ *    -0.21906682369139;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{11};

   _tval_ = _nval_ *     0.47284503192251;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{12};

   _tval_ = _nval_ *     0.16563960410848;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{13};

   _tval_ = _nval_ *    -0.20255741699197;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{14};

   _tval_ = _nval_ *      0.0318059904307;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{15};

   _tval_ = _nval_ *    -0.12791063862316;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{16};

   _tval_ = _nval_ *    -0.33281486394358;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{17};

   _tval_ = _nval_ *     0.14257513579871;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{18};

   _tval_ = _nval_ *     0.26079882986657;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{19};

   _tval_ = _nval_ *    -0.21084482766737;
   _numval_ + _tval_;
   _numval_ + _bias_;

   /* Activation for Node 37 */

   _tval_ = 2.0*_numval_;

   if (_tval_ gt     704.782712893384) then do;
      _numval_ = 1.0;
   end;

   else if (_tval_ lt         -708.3964185) then do;
      _tval_ = 0.0;
      _numval_ = 1.0-2.0/(1.0+_tval_);
   end;
   else do;
      _tval_ = exp(_tval_);

      _numval_ = 1.0-2.0/(1.0+_tval_);
   end;
   _node_val_3142_{38} = _numval_*_drop_;

   /* Combination for Node 38 */

   _numval_ = 0.0;
   _tval_   = 0.0;

   _bias_   =     0.20496929348466;
   _nval_ = _node_val_3142_{20};
   _tval_ = _nval_ *    -0.19742561045374;
   _numval_ + _tval_;

   _nval_ = _node_val_3142_{21};
   _tval_ = _nval_ *     0.28992932216202;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{22};

   _tval_ = _nval_ *    -0.16328903036286;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{23};

   _tval_ = _nval_ *     0.00660949537483;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{24};

   _tval_ = _nval_ *     0.20795783254772;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{25};

   _tval_ = _nval_ *     -0.3711728107612;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{26};

   _tval_ = _nval_ *     -0.0132693722318;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{27};

   _tval_ = _nval_ *    -0.08974731039211;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{28};

   _tval_ = _nval_ *     -0.1098696088048;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{29};

   _tval_ = _nval_ *       0.091303610535;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{30};

   _tval_ = _nval_ *    -0.11675871716924;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{31};

   _tval_ = _nval_ *     0.34280658606138;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{32};

   _tval_ = _nval_ *    -0.10901408029728;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{33};

   _tval_ = _nval_ *     0.24100454936636;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{34};

   _tval_ = _nval_ *      0.8519463842156;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{35};

   _tval_ = _nval_ *      0.3213595421586;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{36};

   _tval_ = _nval_ *     0.28359720440944;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{37};

   _tval_ = _nval_ *     0.08684653919429;
   _numval_ + _tval_;
   _nval_ = _node_val_3142_{38};

   _tval_ = _nval_ *     0.08900059584602;
   _numval_ + _tval_;
   _numval_ + _bias_;

   /* Activation for Node 38 */

   _node_val_3142_{39} = _numval_;
   skip_3142:

   if (_badval_ eq 1) then do;
      P_high_med = .;
   end;
   else do;
      P_high_med = _node_val_3142_{39};
   end;

   drop _numval_;
   drop _sumval_;
   drop _bias_;
   drop _tval_;
   drop _nval_;

   drop _badval_;
   drop _drop_;
   drop _dropinput_;   /*------------------------------------------*/
   drop 'P_high_med'n;
      'P_high_med_3142'n='P_high_med'n;
   /*------------------------------------------*/