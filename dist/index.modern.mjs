import{casUpdateData as t,casFetchRows as n,computeFetchData as a,casSetup as e,caslRun as s,computeSetup as o,computeSetupTables as l,computeRun as r,casUpload as i,casAppendTable as u,casSaveTable as c}from"@sassoftware/restaflib";import{initStore as f}from"@sassoftware/restaf";function d(){return d=Object.assign?Object.assign.bind():function(t){for(var n=1;n<arguments.length;n++){var a=arguments[n];for(var e in a)Object.prototype.hasOwnProperty.call(a,e)&&(t[e]=a[e])}return t},d.apply(this,arguments)}async function m(t,n,a,e){const{handlers:s}=e.appControl.editControl;if(null==s[t])return[n,{statusCode:0,msg:null}];{const[o,l]=await s[t](n,a,e,t);return[o,l]}}async function p(t,n){let a;const e=n.appControl.byvars;if(null===e||0===e.length)return[null,{msg:"Error: Please specify a by variable",statusCode:1}];if(!0===Array.isArray(t))for(let e=0;e<t.length;e++)a=await w(t[e],n);else a=await w(t,n);return a}async function w(n,a){const{store:e,session:s}=a,o="cas"===a.source?t:y,l=function(t,n){const{table:a,byvars:e}=n.appControl,s=n.state.columns,o={};for(const n in t)"_index_"!==n&&"_rowIndex"!==n&&!1===s[n].custom&&(o[n]=t[n]);const l={};return e.forEach(t=>{l[t]=o[t]}),{table:a,data:o,where:l}}(n,a);return await o(e,s,l)}async function y(t,n,a){const{data:e,table:s,where:o}=a;let l=`proc sql; update ${s.libref}.${s.name}`,r="SET ",i=" ";for(const t in e)r=r+i+t+"="+g(e[t]),i=", ";l=l+" "+r;let u=" WHERE ",c=" ";for(const t in o)u=u+c+t+`= ${g(o[t])} `,c=" AND ";l=l+" "+u+";run;";const f={data:{code:l.split(/\r?\n/)}},d=await t.apiCall(n.links("execute"),f),m=await t.jobState(d,{qs:{newState:"Completed",timeout:1}});return{statusCode:"completed"===m.data?0:1,msg:m.data}}function g(t){let n;return n=null==t?".":"string"==typeof t?JSON.stringify(t):t.toString(),n}async function C(t,n,a,e,s){let o=d({},e);const l=s.state.columns,{handlers:r,autoSave:i}=s.appControl.editControl;o[t]=function(t,n){let a=t;const e=n.Type.toLowerCase();return"string"!=typeof a||"decimal"!==e&&"number"!==e&&"double"!==e&&"float"!==e||(a=parseFloat(1*t),!0===isNaN(t)&&(t=0)),a}(n,l[t]);let u={statusCode:0,msg:""};if(null!=r[t]){const n=await r[t](o,t,a,s);if(o=n[0],u=n[1],2===u.statusCode)return{data:n[0],status:u}}let c=await m("main",o,a,s);if(!0===i){if(c=await m("term",c[0],a,s),u=c[1],2===u.statusCode)return{data:c[0],status:u};u=await p(c[0],s)}return o=c[0],!0===s.appControl.cachePolicy&&(s.state.data[e._rowIndex]=o),{data:o,status:u}}async function b(t,n){const{schema:a,rows:e}=t,s=n.appControl.customColumns;let o={statusCode:0,msg:"Initialization was successful"};const l=(t,n,a)=>{const e={_rowIndex:a};if(n.forEach((n,a)=>{const s=t[a].Column.toLowerCase();e[s]=n}),null!=s)for(const t in s){const n=s[t],a=n.Column.toLowerCase();e[a]=n.value}return e},r=[];for(let t=0;t<e.length;t++){const s=l(a,e[t],t),[i,u]=await m("init",s,t,n);o=u,r.push(i)}const i={};if(a.forEach((t,n)=>{const a=t.Column.toLowerCase();t.name=a,t.Label=null==t.Label||0===t.Label.length?t.Column:t.Label,null==t.Type&&(t.Type=null==t.type?"double":t.type),t.custom=!1,i[a]=t}),null!=s)for(const t in s){const n=d({},s[t]);n.name=t,n.custom=!0,i[t]=n}return{columns:i,data:r,status:o}}async function h(t,e){const s="cas"===e.source?await async function(t,a){const{store:e,session:s}=a;let o={};if(null!=t.qs?(o=d({},t.qs),o.from=o.start+1,o.count=o.limit):o=d({},t),o.from<=0||-1===o.next)return null;null==o.where&&(o.where=" ");const l=await n(e,s,o);let r=null;return null!==l&&(r=await b(l.data,a),a.state={modified:[],pagination:d({},l.pagination),currentPage:o,data:[],columns:[]},!0===a.appControl.cachePolicy&&(a.state.data=r.data,a.state.columns=r.columns),r.pagination=d({},l.pagination)),r}(t,e):await async function(t,n){const{store:e,tableSummary:s}=n,{table:o}=n.appControl,l=`${o.libref}.${o.name}`.toLowerCase();let r={qs:{start:t.from-1,limit:t.count,format:null==t.format&&t.format}};const i=await a(e,s,l,null,r);let u=null;return null!==i&&(u=await b(i,n),n.state={modified:[],pagination:{},currentPage:{},data:u.data,columns:u.columns}),u}(t,e);return s}async function P(t,e,s){let o;return o="cas"===e.source?await async function(t,a,e){const{store:s,session:o}=a,{initialFetch:l,table:r}=a.appControl;let i;if(null!=e)i=d({},e);else if("first"===t)i=d({},l);else if(null!==t&&(i=d({},a.state.pagination[t]),-1===i.next||i.from<=0))return null;let u={};if(null!=i.qs?(u=d({},i.qs),u.from=u.start+1,u.count=u.limit):u=d({},i),u.from<=0||-1===u.next)return null;null==u.where&&(u.where=" "),u.table=r;const c=await n(s,o,u);let f=null;return null!==c?(f=await b(c.data,a),a.state={modified:[],pagination:d({},c.pagination),currentPage:i,data:[],columns:[]},!0===a.appControl.cachePolicy&&(a.state.data=f.data,a.state.columns=f.columns),f.pagination=d({},c.pagination),f):void 0}(t,e,s):await async function(t,n,e){const{store:s,tableSummary:o}=n,{table:l,initialFetch:r}=n.appControl;let i=null;const u=`${l.libref}.${l.name}`.toLowerCase();null==e?"first"===t&&(i=d({},r)):i=d({},e);const c=await a(s,o,u,t,i);let f=null;return null!==c&&(f=await b(c,n),n.state={modified:[],pagination:{},currentPage:{},data:f.data,columns:f.columns}),f}(t,e,s),o}async function _(t,n,a){const r=f();let i;return null==t.authType&&(t.authType="code"),i="cas"===n.source?await async function(t,n,a,o){const l=await e(t,n);let r={source:a.source,store:t,session:l.session,servers:l.servers,restaflib:null,logonPayload:n,appControl:a,state:{modified:[],pagination:{},currentPage:{},data:{},columns:{}},id:Date()};if(null!=o){const n=await s(t,l.session,o);if(0!==n.details.statusCode)throw console.log(n),"Preamble failed. Please see console"}return r}(r,t,n,a):await async function(t,n,a,e){let s=await o(t,a.computeContext,n),r=await l(t,s,a.table,e);return{source:a.source,store:t,session:s,tableSummary:r,servers:null,restaflib:null,logonPayload:n,appControl:a,state:{modified:[],pagination:{},currentPage:{},data:{},columns:{}},id:Date()}}(r,t,n,a),i}async function $(t,n,a,e){let o;return o="cas"===a.source?await async function(t,n,a,e){const{store:o,session:l}=a,r={table:t,column:n},i=await s(o,l,"\n  results = selectionLists(_args_.column,_args_.table.caslib, _args_.table.name);\n  send_response({casResults = {data=results}});\n  ",r,!0);if(0!==i.results.casResults.data.statusCode)throw"Failed to create unique list";return i.results.casResults.data.data}(t,n,a):await async function(t,n,a){const e={};return e[t]=[],e}(t),o}async function v(t,n,a,e,s,o,l){const{store:c,session:f}=s;let m=Object.keys(n[0]),p=["_index_","_rowIndex"];null!==a&&(p=p.concat(a));const w=m.filter(t=>!(p.indexOf(t)>=0)),y={};w.forEach(t=>{y[t]=s.state.columns[t]});let g,C=null;"cas"===s.source&&(C=w.join(",")+"\n");for(let t=0;t<n.length;t++){let a=n[t];a=d({},a,e);const s=[];w.forEach((t,n)=>{let e=a[t];"string"==typeof e&&(e=e.trim()),s[n]=e}),C=null===C?s.join(",")+"\n":C+s.join(",")+"\n"}return g="cas"===s.source?await async function(t,n,a,e,s,o){const l=`${a.caslib}.${a.name}`;let r=await i(t,n,null,l,!0,e);return null!=s?(r=await u(t,n,a,s,o),r):r}(c,f,t,C,o,l):await async function(t,n,a,e,s){let o=`data ${e.libref}.${e.name}; INFILE datalines delimiter=',' ;\n`,l="",i="INPUT ";for(const t in a){const n=a[t];i=i+n.Column+" ","CHAR"===n.Type&&(l=l+" "+` ${n.Column} $ ${n.length} \n`)}return l.length>0&&(l="LENGTH "+l+";\n"),i+=";\n",o=o+";\n"+l+i+"datalines;\n"+s+"\n; run; proc print;run;\n",await r(t,n,o),{msg:"done",statusCode:0}}(c,f,y,t,C),g}async function x(t,n){const{store:a,session:e}=t;if("compute"===t.source)return{msg:"Action does not apply to SAS 9 tables",statusCode:0};const s=null!=n?n:t.appControl.table;return await c(a,e,s),{msg:"Table saved",statusCode:0}}export{C as cellEdit,m as commonHandler,$ as distinctValues,h as fetchTableRows,x as saveTable,P as scrollTable,_ as setup,p as updateTableRows,v as uploadData};
//# sourceMappingURL=index.modern.mjs.map
