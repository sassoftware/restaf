import{casUpdateData as t,casFetchRows as n,computeFetchData as a,casSetup as e,caslRun as s,computeSetup as o,computeSetupTables as l,computeRun as r,casUpload as i,casAppendTable as c,casSaveTable as u}from"@sassoftware/restaflib";import{initStore as f}from"@sassoftware/restaf";function p(){return p=Object.assign?Object.assign.bind():function(t){for(var n=1;n<arguments.length;n++){var a=arguments[n];for(var e in a)Object.prototype.hasOwnProperty.call(a,e)&&(t[e]=a[e])}return t},p.apply(this,arguments)}async function d(t,n,a,e){const{handlers:s}=e.appControl.editControl;if(null==s[t])return[n,{statusCode:0,msg:null}];{const[o,l]=await s[t](n,a,e,t);return[o,l]}}async function m(t,n){let a;const e=n.appControl.byvars;if(null===e||0===e.length)return[null,{msg:"Error: Please specify a by variable",statusCode:1}];if(!0===Array.isArray(t))for(let e=0;e<t.length;e++)a=await w(t[e],n);else a=await w(t,n);return a}async function w(n,a){const{store:e,session:s}=a,o="cas"===a.source?t:y,l=function(t,n){const{table:a,byvars:e}=n.appControl,s=n.state.columns,o={};for(const n in t)"_index_"!==n&&"_rowIndex"!==n&&!1===s[n].custom&&(o[n]=t[n]);const l={};return e.forEach(t=>{l[t]=o[t]}),{table:a,data:o,where:l}}(n,a);return await o(e,s,l)}async function y(t,n,a){const{data:e,table:s,where:o}=a;let l=`proc sql; update ${s.libref}.${s.name}`,r="SET ",i=" ";for(const t in e)r=r+i+t+"="+C(e[t]),i=", ";l=l+" "+r;let c=" WHERE ",u=" ";for(const t in o)c=c+u+t+`= ${C(o[t])} `,u=" AND ";l=l+" "+c+";run;";const f={data:{code:l.split(/\r?\n/)}},p=await t.apiCall(n.links("execute"),f),d=await t.jobState(p,{qs:{newState:"Completed",timeout:1}});return{statusCode:"completed"===d.data?0:1,msg:d.data}}function C(t){let n;return n=null==t?".":"string"==typeof t?JSON.stringify(t):t.toString(),n}async function b(t,n,a,e,s){let o=p({},e);const l=s.state.columns,{handlers:r,autoSave:i}=s.appControl.editControl,c=null==i||i,u=null==s.appControl.cachePolicy||s.appControl.cachePolicy;o[t]=function(t,n){let a=t;const e=n.Type.toLowerCase();return"string"!=typeof a||"decimal"!==e&&"number"!==e&&"double"!==e&&"float"!==e||(a=parseFloat(1*t),!0===isNaN(t)&&(t=0)),a}(n,l[t]);let f={statusCode:0,msg:""};if(null!=r[t]){const n=await r[t](o,t,a,s);if(o=n[0],f=n[1],2===f.statusCode)return{data:n[0],status:f}}let w=await d("main",o,a,s);if(!0===c){if(w=await d("term",w[0],a,s),f=w[1],2===f.statusCode)return{data:w[0],status:f};f=await m(w[0],s)}return o=w[0],!0===u&&(s.state.data[e._rowIndex]=o),{data:o,status:f}}async function g(t,n){const{schema:a,rows:e}=t,s=n.appControl.customColumns;let o={statusCode:0,msg:"Initialization was successful"};const l=(t,n,a)=>{const e={_rowIndex:a};if(n.forEach((n,a)=>{const s=t[a].Column.toLowerCase();e[s]=n}),null!=s)for(const t in s){const n=s[t],a=n.Column.toLowerCase();e[a]=n.value}return e},r=[];for(let t=0;t<e.length;t++){const s=l(a,e[t],t),[i,c]=await d("init",s,t,n);o=c,r.push(i)}const i={};if(a.forEach((t,n)=>{const a=t.Column.toLowerCase();t.name=a,t.Label=null==t.Label||0===t.Label.length?t.Column:t.Label,null==t.Type&&(t.Type=null==t.type?"double":t.type),t.custom=!1,i[a]=t}),null!=s)for(const t in s){const n=p({},s[t]);n.name=t,n.custom=!0,i[t]=n}return{columns:i,data:r,status:o}}async function h(t,e,s){let o;return o="cas"===e.source?await async function(t,a,e){const{store:s,session:o}=a,{initialFetch:l,table:r}=a.appControl,i=null==a.appControl.cachePolicy||a.appControl.cachePolicy;let c;if(null!=e)c=p({},e);else if("first"===t)c=p({},l);else if(null!==t&&(c=p({},a.state.pagination[t]),-1===c.next||c.from<=0))return null;let u={};if(null!=c.qs?(u=p({},c.qs),u.from=u.start+1,u.count=u.limit):u=p({},c),u.from<=0||-1===u.next)return null;null==u.where&&(u.where=" "),u.table=r;const f=await n(s,o,u);let d=null;return null!==f?(d=await g(f.data,a),a.state={modified:[],pagination:p({},f.pagination),currentPage:c,data:[],columns:[]},!0===i&&(a.state.data=d.data,a.state.columns=d.columns),d.pagination=p({},f.pagination),d):void 0}(t,e,s):await async function(t,n,e){const{store:s,tableSummary:o}=n,{table:l,initialFetch:r}=n.appControl,i=null==n.appControl.cachePolicy||n.appControl.cachePolicy;let c=null;const u=`${l.libref}.${l.name}`.toLowerCase();null==e?"first"===t&&(c=p({},r)):c=p({},e);const f=await a(s,o,u,t,c);let d=null;return null!==f&&(d=await g(f,n),n.state={modified:[],pagination:{},currentPage:{},data:[],columns:[]},!0===i&&(n.state.data=d.data,n.state.columns=d.columns)),d}(t,e,s),o}async function E(t,n){const a=f();let r;return null==t.authType&&(t.authType="code"),r="cas"===n.source?await async function(t,n,a){const o=await e(t,n);let l={source:a.source,store:t,session:o.session,servers:o.servers,restaflib:null,logonPayload:n,appControl:a,state:{modified:[],pagination:{},currentPage:{},data:{},columns:{}},id:Date()};if(null!=a.preamble){const n=await s(t,o.session,a.preamble);if(0!==n.disposition.statusCode)throw console.log(JSON.stringify(n,null,4)),"Preamble failed. Please see console"}return l}(a,t,n):await async function(t,n,a){let e=await o(t,a.computeContext,n),s=await l(t,e,a.table,a.preamble);return{source:a.source,store:t,session:e,tableSummary:s,servers:null,restaflib:null,logonPayload:n,appControl:a,state:{modified:[],pagination:{},currentPage:{},data:{},columns:{}},id:Date()}}(a,t,n),r}async function P(t,n,e){let o;const l=null!=e?e:n.appControl.table;return o="cas"===n.source?await async function(t,n,a){const{store:e,session:o}=a,l={table:t,column:n},r=await s(e,o,"\n  results = selectionLists(_args_.column,_args_.table.caslib, _args_.table.name);\n  send_response({casResults = {data=results}});\n  ",l,!0);if(0!==r.results.casResults.data.statusCode)throw"Failed to create unique list";return r.results.casResults.data.data}(l,t,n):await async function(t,n,e){const{store:s,session:o}=e,l=`\n    PROC SQL;\n    CREATE TABLE WORK.QUERY\n    AS\n    SELECT distinct(${n}) as utype FROM ${t.libref}.${t.name};\n   QUIT;`,i=await r(s,o,l),c={};let u="first";const f=[];let p;do{p=await a(s,i,"QUERY",u);const t=p.rows.map(t=>t[0]);f.push(...t),u="next"}while(p.scrollOptions.indexOf("next")>=0);return c[n]=f,c}(l,t,n),o}async function x(t,n,a,e,s,o,l){const{store:u,session:f}=s;null===n&&(n=s.state.data);const d=Object.keys(n[0]);let m=["_index_","_rowIndex"];null!==a&&(m=m.concat(a));const w=d.filter(t=>!(m.indexOf(t)>=0)),y={};w.forEach(t=>{y[t]=s.state.columns[t]});let C,b=null;"cas"===s.source&&(b=w.join(",")+"\n");for(let t=0;t<n.length;t++){let a=n[t];a=p({},a,e);const s=[];w.forEach((t,n)=>{let e=a[t];"string"==typeof e&&(e=e.trim()),s[n]=e}),b=null===b?s.join(",")+"\n":b+s.join(",")+"\n"}return C="cas"===s.source?await async function(t,n,a,e,s,o){const l=`${a.caslib}.${a.name}`;let r=await i(t,n,null,l,!0,e);return null!=s?(r=await c(t,n,a,s,o),r):r}(u,f,t,b,o,l):await async function(t,n,a,e,s){let o=`data ${e.libref}.${e.name}; INFILE datalines delimiter=',' ;\n`,l="",i="INPUT ";for(const t in a){const n=a[t];i=i+n.Column+" ","CHAR"===n.Type&&(l=l+" "+` ${n.Column} $ ${n.length} \n`)}return l.length>0&&(l="LENGTH "+l+";\n"),i+=";\n",o=o+";\n"+l+i+"datalines;\n"+s+"\n; run; proc print;run;\n",await r(t,n,o),{msg:"done",statusCode:0}}(u,f,y,t,b),C}async function L(t,n){const{store:a,session:e}=t;if("compute"===t.source)return{msg:"Action does not apply to SAS 9 tables",statusCode:0};const s=null!=n?n:t.appControl.table;return await u(a,e,s),{msg:"Table saved",statusCode:0}}export{b as cellEdit,d as commonHandler,P as distinctValues,L as saveTable,h as scrollTable,E as setup,m as updateTableRows,x as uploadData};
//# sourceMappingURL=index.modern.mjs.map
