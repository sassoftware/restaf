import{casUpdateData as t,casFetchRows as n,computeFetchData as a,casSetup as e,caslRun as o,computeSetup as s,computeSetupTables as l,computeRun as r,casUpload as i,casAppendTable as u,casSaveTable as c}from"@sassoftware/restaflib";import{initStore as f}from"@sassoftware/restaf";function d(){return d=Object.assign?Object.assign.bind():function(t){for(var n=1;n<arguments.length;n++){var a=arguments[n];for(var e in a)Object.prototype.hasOwnProperty.call(a,e)&&(t[e]=a[e])}return t},d.apply(this,arguments)}async function m(t,n,a,e){const{handlers:o}=e.appControl.editControl;if(null==o[t])return[n,{statusCode:0,msg:null}];{const[s,l]=await o[t](n,a,e,t);return[s,l]}}async function p(t,n){let a;const e=n.appControl.byvars;if(null===e||0===e.length)return[null,{msg:"Error: Please specify a by variable",statusCode:1}];if(!0===Array.isArray(t))for(let e=0;e<t.length;e++)a=await w(t[e],n);else a=await w(t,n);return a}async function w(n,a){const{store:e,session:o}=a,s="cas"===a.source?t:y,l=function(t,n){const{table:a,byvars:e}=n.appControl,o=n.state.columns,s={};for(const n in t)"_index_"!==n&&"_rowIndex"!==n&&!1===o[n].custom&&(s[n]=t[n]);const l={};return e.forEach(t=>{l[t]=s[t]}),{table:a,data:s,where:l}}(n,a);return await s(e,o,l)}async function y(t,n,a){const{data:e,table:o,where:s}=a;let l=`proc sql; update ${o.libref}.${o.name}`,r="SET ",i=" ";for(const t in e)r=r+i+t+"="+g(e[t]),i=", ";l=l+" "+r;let u=" WHERE ",c=" ";for(const t in s)u=u+c+t+`= ${g(s[t])} `,c=" AND ";l=l+" "+u+";run;";const f={data:{code:l.split(/\r?\n/)}},d=await t.apiCall(n.links("execute"),f),m=await t.jobState(d,{qs:{newState:"Completed",timeout:1}});return{statusCode:"completed"===m.data?0:1,msg:m.data}}function g(t){let n;return n=null==t?".":"string"==typeof t?JSON.stringify(t):t.toString(),n}async function C(t,n,a,e,o){let s=d({},e);const l=o.state.columns,{handlers:r,autoSave:i}=o.appControl.editControl,u=null==i||i;s[t]=function(t,n){let a=t;const e=n.Type.toLowerCase();return"string"!=typeof a||"decimal"!==e&&"number"!==e&&"double"!==e&&"float"!==e||(a=parseFloat(1*t),!0===isNaN(t)&&(t=0)),a}(n,l[t]);let c={statusCode:0,msg:""};if(null!=r[t]){const n=await r[t](s,t,a,o);if(s=n[0],c=n[1],2===c.statusCode)return{data:n[0],status:c}}let f=await m("main",s,a,o);if(!0===u){if(f=await m("term",f[0],a,o),c=f[1],2===c.statusCode)return{data:f[0],status:c};c=await p(f[0],o)}return s=f[0],!0===o.appControl.cachePolicy&&(o.state.data[e._rowIndex]=s),{data:s,status:c}}async function b(t,n){const{schema:a,rows:e}=t,o=n.appControl.customColumns;let s={statusCode:0,msg:"Initialization was successful"};const l=(t,n,a)=>{const e={_rowIndex:a};if(n.forEach((n,a)=>{const o=t[a].Column.toLowerCase();e[o]=n}),null!=o)for(const t in o){const n=o[t],a=n.Column.toLowerCase();e[a]=n.value}return e},r=[];for(let t=0;t<e.length;t++){const o=l(a,e[t],t),[i,u]=await m("init",o,t,n);s=u,r.push(i)}const i={};if(a.forEach((t,n)=>{const a=t.Column.toLowerCase();t.name=a,t.Label=null==t.Label||0===t.Label.length?t.Column:t.Label,null==t.Type&&(t.Type=null==t.type?"double":t.type),t.custom=!1,i[a]=t}),null!=o)for(const t in o){const n=d({},o[t]);n.name=t,n.custom=!0,i[t]=n}return{columns:i,data:r,status:s}}async function h(t,e){const o="cas"===e.source?await async function(t,a){const{store:e,session:o}=a;let s={};if(null!=t.qs?(s=d({},t.qs),s.from=s.start+1,s.count=s.limit):s=d({},t),s.from<=0||-1===s.next)return null;null==s.where&&(s.where=" ");const l=await n(e,o,s);let r=null;return null!==l&&(r=await b(l.data,a),a.state={modified:[],pagination:d({},l.pagination),currentPage:s,data:[],columns:[]},!0===a.appControl.cachePolicy&&(a.state.data=r.data,a.state.columns=r.columns),r.pagination=d({},l.pagination)),r}(t,e):await async function(t,n){const{store:e,tableSummary:o}=n,{table:s}=n.appControl,l=`${s.libref}.${s.name}`.toLowerCase();let r={qs:{start:t.from-1,limit:t.count,format:null==t.format&&t.format}};const i=await a(e,o,l,null,r);let u=null;return null!==i&&(u=await b(i,n),n.state={modified:[],pagination:{},currentPage:{},data:u.data,columns:u.columns}),u}(t,e);return o}async function P(t,e,o){let s;return s="cas"===e.source?await async function(t,a,e){const{store:o,session:s}=a,{initialFetch:l,table:r}=a.appControl,i=null==a.appControl.cachePolicy||a.appControl.cachePolicy;let u;if(null!=e)u=d({},e);else if("first"===t)u=d({},l);else if(null!==t&&(u=d({},a.state.pagination[t]),-1===u.next||u.from<=0))return null;let c={};if(null!=u.qs?(c=d({},u.qs),c.from=c.start+1,c.count=c.limit):c=d({},u),c.from<=0||-1===c.next)return null;null==c.where&&(c.where=" "),c.table=r;const f=await n(o,s,c);let m=null;return null!==f?(m=await b(f.data,a),a.state={modified:[],pagination:d({},f.pagination),currentPage:u,data:[],columns:[]},!0===i&&(a.state.data=m.data,a.state.columns=m.columns),m.pagination=d({},f.pagination),m):void 0}(t,e,o):await async function(t,n,e){const{store:o,tableSummary:s}=n,{table:l,initialFetch:r}=n.appControl,i=null==n.appControl.cachePolicy||n.appControl.cachePolicy;let u=null;const c=`${l.libref}.${l.name}`.toLowerCase();null==e?"first"===t&&(u=d({},r)):u=d({},e);const f=await a(o,s,c,t,u);let m=null;return null!==f&&(m=await b(f,n),n.state={modified:[],pagination:{},currentPage:{},data:[],columns:[]},!0===i&&(n.state.data=m.data,n.state.columns=m.columns)),m}(t,e,o),s}async function _(t,n,a){const r=f();let i;return null==t.authType&&(t.authType="code"),i="cas"===n.source?await async function(t,n,a,s){const l=await e(t,n);let r={source:a.source,store:t,session:l.session,servers:l.servers,restaflib:null,logonPayload:n,appControl:a,state:{modified:[],pagination:{},currentPage:{},data:{},columns:{}},id:Date()};if(null!=s){const n=await o(t,l.session,s);if(0!==n.details.statusCode)throw console.log(n),"Preamble failed. Please see console"}return r}(r,t,n,a):await async function(t,n,a,e){let o=await s(t,a.computeContext,n),r=await l(t,o,a.table,e);return{source:a.source,store:t,session:o,tableSummary:r,servers:null,restaflib:null,logonPayload:n,appControl:a,state:{modified:[],pagination:{},currentPage:{},data:{},columns:{}},id:Date()}}(r,t,n,a),i}async function $(t,n,a,e){let s;return s="cas"===a.source?await async function(t,n,a,e){const{store:s,session:l}=a,r={table:t,column:n},i=await o(s,l,"\n  results = selectionLists(_args_.column,_args_.table.caslib, _args_.table.name);\n  send_response({casResults = {data=results}});\n  ",r,!0);if(0!==i.results.casResults.data.statusCode)throw"Failed to create unique list";return i.results.casResults.data.data}(t,n,a):await async function(t,n,a){const e={};return e[t]=[],e}(t),s}async function v(t,n,a,e,o,s,l){const{store:c,session:f}=o;let m=Object.keys(n[0]),p=["_index_","_rowIndex"];null!==a&&(p=p.concat(a));const w=m.filter(t=>!(p.indexOf(t)>=0)),y={};w.forEach(t=>{y[t]=o.state.columns[t]});let g,C=null;"cas"===o.source&&(C=w.join(",")+"\n");for(let t=0;t<n.length;t++){let a=n[t];a=d({},a,e);const o=[];w.forEach((t,n)=>{let e=a[t];"string"==typeof e&&(e=e.trim()),o[n]=e}),C=null===C?o.join(",")+"\n":C+o.join(",")+"\n"}return g="cas"===o.source?await async function(t,n,a,e,o,s){const l=`${a.caslib}.${a.name}`;let r=await i(t,n,null,l,!0,e);return null!=o?(r=await u(t,n,a,o,s),r):r}(c,f,t,C,s,l):await async function(t,n,a,e,o){let s=`data ${e.libref}.${e.name}; INFILE datalines delimiter=',' ;\n`,l="",i="INPUT ";for(const t in a){const n=a[t];i=i+n.Column+" ","CHAR"===n.Type&&(l=l+" "+` ${n.Column} $ ${n.length} \n`)}return l.length>0&&(l="LENGTH "+l+";\n"),i+=";\n",s=s+";\n"+l+i+"datalines;\n"+o+"\n; run; proc print;run;\n",await r(t,n,s),{msg:"done",statusCode:0}}(c,f,y,t,C),g}async function x(t,n){const{store:a,session:e}=t;if("compute"===t.source)return{msg:"Action does not apply to SAS 9 tables",statusCode:0};const o=null!=n?n:t.appControl.table;return await c(a,e,o),{msg:"Table saved",statusCode:0}}export{C as cellEdit,m as commonHandler,$ as distinctValues,h as fetchTableRows,x as saveTable,P as scrollTable,_ as setup,p as updateTableRows,v as uploadData};
//# sourceMappingURL=index.modern.mjs.map
